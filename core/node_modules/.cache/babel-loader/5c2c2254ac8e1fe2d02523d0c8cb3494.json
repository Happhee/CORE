{"ast":null,"code":"var _jsxFileName = \"/Users/hongseohee/core-client-aws/CORE/core/src/hooks/auth.js\";\n\n/*eslint-disable */\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { auth } from '../_actions/user_action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function (Component, option, adminRoute = null) {\n  var _s = $RefreshSig$();\n\n  //null => 아무나 출입이 가능한 페이지\n  //true => 로그인한 유저만 출입이 가능한 페이지\n  //false=> 로그인한 유저는 출입 불가능한 페이지\n  function AuthCheck(props) {\n    _s();\n\n    const dispatch = useDispatch(); //useEffect를 사용해서 초기 검증을 실행해준다\n\n    useEffect(() => {\n      dispatch(auth()).then(res => {\n        console.log(res);\n      });\n    }, []); // function AuthenticationCheck(props) {\n    //     const dispatch = useDispatch();\n    //     useEffect(() => {\n    //         dispatch(auth()).then(res => {\n    //             console.log(res);\n    //             //로그인 하지 않은 상태\n    //             if (!res.payload.isAuth) {\n    //                 if (option) {\n    //                     props.history.push('/')\n    //                 }\n    //             } else {\n    //                 //로그인 한 상태\n    //                 if (adminRoute && !res.payload.isAdmin) {\n    //                     props.history.push('/classroom/teacher')\n    //                 } else {\n    //                     if (option === false)\n    //                         props.history.push('/')\n    //                 }\n    //             }\n    //         })\n    //     }, [])\n\n    return /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this);\n  }\n\n  _s(AuthCheck, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n    return [useDispatch];\n  });\n\n  return AuthCheck;\n}","map":{"version":3,"sources":["/Users/hongseohee/core-client-aws/CORE/core/src/hooks/auth.js"],"names":["React","useEffect","useDispatch","auth","Component","option","adminRoute","AuthCheck","props","dispatch","then","res","console","log"],"mappings":";;AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,IAAT,QAAqB,yBAArB;;AAEA,eAAe,UAAUC,SAAV,EAAqBC,MAArB,EAA6BC,UAAU,GAAG,IAA1C,EAAgD;AAAA;;AAC3D;AACA;AACA;AACA,WAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACtB,UAAMC,QAAQ,GAAGP,WAAW,EAA5B,CADsB,CAEtB;;AACAD,IAAAA,SAAS,CAAC,MAAM;AACZQ,MAAAA,QAAQ,CAACN,IAAI,EAAL,CAAR,CAAiBO,IAAjB,CAAuBC,GAAD,IAAS;AAC3BC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,OAFD;AAGH,KAJQ,EAIN,EAJM,CAAT,CAHsB,CAStB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AAEH;;AAtC0D,KAIlDJ,SAJkD;AAAA,YAKtCL,WALsC;AAAA;;AAwC3D,SAAOK,SAAP;AAEH","sourcesContent":["/*eslint-disable */\n\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { auth } from '../_actions/user_action';\n\nexport default function (Component, option, adminRoute = null) {\n    //null => 아무나 출입이 가능한 페이지\n    //true => 로그인한 유저만 출입이 가능한 페이지\n    //false=> 로그인한 유저는 출입 불가능한 페이지\n    function AuthCheck(props) {\n        const dispatch = useDispatch();\n        //useEffect를 사용해서 초기 검증을 실행해준다\n        useEffect(() => {\n            dispatch(auth()).then((res) => {\n                console.log(res);\n            });\n        }, []);\n\n        // function AuthenticationCheck(props) {\n        //     const dispatch = useDispatch();\n\n        //     useEffect(() => {\n        //         dispatch(auth()).then(res => {\n        //             console.log(res);\n        //             //로그인 하지 않은 상태\n        //             if (!res.payload.isAuth) {\n        //                 if (option) {\n        //                     props.history.push('/')\n        //                 }\n        //             } else {\n        //                 //로그인 한 상태\n        //                 if (adminRoute && !res.payload.isAdmin) {\n        //                     props.history.push('/classroom/teacher')\n        //                 } else {\n        //                     if (option === false)\n        //                         props.history.push('/')\n        //                 }\n        //             }\n        //         })\n        //     }, [])\n\n        return <Component />\n\n    }\n\n    return AuthCheck\n\n}"]},"metadata":{},"sourceType":"module"}