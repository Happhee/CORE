{"ast":null,"code":"import _slicedToArray from\"/Users/hongseohee/core-client-aws/CORE/core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Users/hongseohee/core-client-aws/CORE/core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";/*eslint-disable */import React,{useState}from'react';import{styled}from'@mui/material/styles';import Box from'@mui/material/Box';import Paper from'@mui/material/Paper';import Grid from'@mui/material/Grid';import TextField from'@mui/material/TextField';import'../css/ProblemGrid.css';import AlertDialog from'../components/AlertDialog';import*as InputVaildtion from'./InputValidation';//그리드 박스 스타일 속성 적용\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Item=styled(Paper)(function(_ref){var theme=_ref.theme;return _objectSpread(_objectSpread({},theme.typography.body2),{},{padding:theme.spacing(0),textAlign:'start',color:theme.palette.text.secondary,margin:theme.spacing(1),boxShadow:'none'});});//텍스트 필드 속성 적용\nvar CssTextField=styled(TextField)({'& label.Mui-focused':{color:'green'},'& .MuiInput-underline:after':{borderBottomColor:'green'},'& .MuiOutlinedInput-root':{'& fieldset':{borderColor:'#9A30AE'},'&:hover fieldset':{borderColor:'pink'},'&.Mui-focused fieldset':{borderColor:'green'}}});function ProblemGrid(props){var _useState=useState(props.grid_data),_useState2=_slicedToArray(_useState,2),grid_data=_useState2[0],setGrid_data=_useState2[1];var sub_list=[];// 입력값, 출력값 초기세팅 \nvar input_list=[];var output_list=[];var code_list=[];var answer_list=[];var question_list=[];var input_title=\"\";var output_title=\"\";var question_title=\"\";var answer_title=\"\";var _useState3=useState(props.input_data),_useState4=_slicedToArray(_useState3,2),input_data=_useState4[0],setInput_data=_useState4[1];var _useState5=useState(props.output_data),_useState6=_slicedToArray(_useState5,2),output_data=_useState6[0],setOutput_data=_useState6[1];if(input_data.length==2){question_title=input_data[1][1].title;input_title=input_data[0][1].title;}else{input_title=input_data[0].title;}if(output_data.length==2){answer_title=output_data[1][1].title;output_title=output_data[0][1].title;}else{output_title=output_data[0].title;}//피드백 세팅\nvar feedback_textfield=[];// 텍스트 필드 값 바꾸기 \nvar handleGridChange=function handleGridChange(event){var _event$target=event.target,value=_event$target.value,name=_event$target.name;setGrid_data(InputVaildtion.newTextfieldValue(grid_data,value,name));};var handleInputChange=function handleInputChange(event){var _event$target2=event.target,value=_event$target2.value,name=_event$target2.name;setInput_data(InputVaildtion.newTextfieldValue(input_data,value,name));};var handleOutputChange=function handleOutputChange(event){var _event$target3=event.target,value=_event$target3.value,name=_event$target3.name;setOutput_data(InputVaildtion.newTextfieldValue(output_data,value,name));};//등록 수정\nif(grid_data[0].value===\"register_modify\"){for(var index=3;index<6;index++){sub_list.push(/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Item,{children:[/*#__PURE__*/_jsx(\"p\",{className:\"grid_data_title\",children:grid_data[index].title},grid_data[index].title),/*#__PURE__*/_jsx(CssTextField,{fullWidth:true,label:grid_data[index].input,variant:\"outlined\",id:\"custom-css-outlined-input\",multiline:true,rows:10,name:grid_data[index].title,value:grid_data[index].value,onChange:handleGridChange},grid_data[index].input)]},grid_data[index].id)},index));}input_data.map(function(input,index){input_list.push(/*#__PURE__*/_jsx(Item,{children:/*#__PURE__*/_jsx(CssTextField,{fullWidth:true,label:input.input,variant:\"outlined\",id:\"custom-css-outlined-input\",maxRows:1,name:input.id,value:input.value,onChange:handleInputChange},input.input)},index));});output_data.map(function(output,index){output_list.push(/*#__PURE__*/_jsx(Item,{children:/*#__PURE__*/_jsx(CssTextField,{fullWidth:true,label:output.input,variant:\"outlined\",id:\"custom-css-outlined-input\",maxRows:1,name:output.id,value:output.value,onChange:handleOutputChange},output.input)},index));});}//선생님 피드백 \nelse if(grid_data[0].value==='teacher - feedBack'){input_data.map(function(input,index){input_list.push(/*#__PURE__*/_jsx(Item,{children:/*#__PURE__*/_jsx(\"p\",{className:\"grid_data\",children:input.input},input.title)},index));});output_data.map(function(output,index){output_list.push(/*#__PURE__*/_jsx(Item,{children:/*#__PURE__*/_jsx(CssTextField,{fullWidth:true,label:output.input,variant:\"outlined\",id:\"custom-css-outlined-input\",maxRows:1,name:output.id,value:output.value,onChange:handleOutputChange},output.input)},index));});for(var _index=3;_index<8;_index++){var xs=6;if(_index==3||_index==4||_index==7)xs=12;sub_list.push(/*#__PURE__*/_jsx(Grid,{item:true,xs:xs,children:/*#__PURE__*/_jsxs(Item,{children:[/*#__PURE__*/_jsx(\"p\",{className:\"grid_data_title\",children:grid_data[_index].title},grid_data[_index].input),/*#__PURE__*/_jsx(\"p\",{className:\"grid_data\",children:grid_data[_index].value},grid_data[_index].value)]},grid_data[_index].title)},grid_data[_index].id));}feedback_textfield.push(/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Item,{children:[/*#__PURE__*/_jsx(\"p\",{className:\"grid_data_title\",children:grid_data[8].title},grid_data[8].title),/*#__PURE__*/_jsx(CssTextField,{fullWidth:true,label:grid_data[8].input,variant:\"outlined\",id:\"custom-css-outlined-input\",multiline:true,rows:5,name:grid_data[8].title,value:grid_data[8].value,onChange:handleGridChange},grid_data[8].input)]},grid_data[0].id)},grid_data[0].value));}//학생 문제 제출쪽\n//학생 문제 제출쪽\n//학생 문제 제출쪽\n//학생 문제 제출쪽\n//학생 문제 제출쪽\n//학생 문제 제출쪽\n//학생 문제 제출쪽\n//학생 문제 제출쪽\n//학생 문제 제출쪽\n//학생 문제 제출쪽\nelse{//문제목록 p 여기는 서버에서 받아오는곳\nfor(var _index2=3;_index2<5;_index2++){sub_list.push(/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Item,{children:[/*#__PURE__*/_jsx(\"p\",{className:\"grid_data_title\",children:grid_data[_index2].title},grid_data[_index2].input),/*#__PURE__*/_jsx(\"p\",{className:\"grid_data\",children:grid_data[_index2].value},grid_data[_index2].value)]},grid_data[_index2].title)},grid_data[_index2].id));}//인풋값 서버에서 \ninput_data[0].map(function(input,index){console.log(input);input_list.push(/*#__PURE__*/_jsx(Item,{children:/*#__PURE__*/_jsx(\"p\",{className:\"grid_data\",children:input.input},input.title)},index));});//학생 코드 및 질문 제출 (처음 문제 제출할때!!!!!!!!!!1)\n//학생 코드 및 질문 제출 (처음 문제 제출할때!!!!!!!!!!1)\n//학생 코드 및 질문 제출 (처음 문제 제출할때!!!!!!!!!!1)\nif(grid_data[0].value===\"student - submit\"){//출력값 서버에서 \noutput_data.map(function(output,index){output_list.push(/*#__PURE__*/_jsx(Item,{children:/*#__PURE__*/_jsx(\"p\",{className:\"grid_data\",children:output.input},output.input)},index));});//질문 입력 하는 곳\ninput_data[1].map(function(input,index){question_list.push(/*#__PURE__*/_jsx(Item,{children:/*#__PURE__*/_jsx(CssTextField,{fullWidth:true,label:input.input,variant:\"outlined\",id:\"custom-css-outlined-input\",maxRows:1,name:input.id,value:input.value,onChange:handleOutputChange},input.input)},index));});//코드 입력\ncode_list.push(/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Item,{children:[/*#__PURE__*/_jsx(\"p\",{className:\"grid_data_title\",children:grid_data[5].title},grid_data[5].input),/*#__PURE__*/_jsx(CssTextField,{fullWidth:true,label:grid_data[5].input,variant:\"outlined\",id:\"custom-css-outlined-input\",maxRows:1,name:grid_data[5].id,value:grid_data[5].value,onChange:handleOutputChange},grid_data[5].input)]},grid_data[5].title)},grid_data[5].id));}//학생 피드백 완료\nelse if(grid_data[0].value===\"student - feedback_success\"){output_data[0].map(function(output,index){output_list.push(/*#__PURE__*/_jsx(Item,{children:/*#__PURE__*/_jsx(\"p\",{className:\"grid_data\",children:output.input},output.input)},index));});//질문 확인\noutput_data[1].map(function(output,index){answer_list.push(/*#__PURE__*/_jsx(Item,{children:/*#__PURE__*/_jsx(\"p\",{className:\"grid_data\",children:output.input},output.input)},index));});//코드 입력보기 \ncode_list.push(/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Item,{children:[/*#__PURE__*/_jsx(\"p\",{className:\"grid_data_title\",children:grid_data[5].title},grid_data[5].input),/*#__PURE__*/_jsx(\"p\",{className:\"grid_data\",children:grid_data[5].value},grid_data[5].value)]},grid_data[5].title)},grid_data[5].id));}//힉셍 코드 보기 \nelse if(grid_data[0].value===\"student - viewsubmit\"){output_data.map(function(output,index){output_list.push(/*#__PURE__*/_jsx(Item,{children:/*#__PURE__*/_jsx(\"p\",{className:\"grid_data\",children:output.input},output.input)},index));});//질문 수정?????\ninput_data[1].map(function(input,index){question_list.push(/*#__PURE__*/_jsx(Item,{children:/*#__PURE__*/_jsx(CssTextField,{fullWidth:true,label:input.input,variant:\"outlined\",id:\"custom-css-outlined-input\",maxRows:1,name:input.id,value:input.value,onChange:handleOutputChange},input.input)},index));});//코드 입력보기 \ncode_list.push(/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Item,{children:[/*#__PURE__*/_jsx(\"p\",{className:\"grid_data_title\",children:grid_data[5].title},grid_data[5].input),/*#__PURE__*/_jsx(\"p\",{className:\"grid_data\",children:grid_data[5].value},grid_data[5].value)]},grid_data[5].title)},grid_data[5].id));}input_data[1].map(function(input,index){question_list.push(/*#__PURE__*/_jsx(Item,{children:/*#__PURE__*/_jsx(\"p\",{className:\"grid_data\",children:input.input},input.title)},index));});}var button=[];button.push();return/*#__PURE__*/_jsxs(Box,{component:\"form\",noValidate:true,autoComplete:\"off\",sx:{flexGrow:1},children:[/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:2,children:/*#__PURE__*/_jsxs(Item,{children:[/*#__PURE__*/_jsx(\"p\",{className:\"grid_data_title\",children:grid_data[1].title}),/*#__PURE__*/_jsxs(\"p\",{className:\"grid_data\",children:[props.mainunit,\"\\uB2E8\\uC6D0\"]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:2,children:/*#__PURE__*/_jsxs(Item,{children:[/*#__PURE__*/_jsx(\"p\",{className:\"grid_data_title\",children:grid_data[2].title}),/*#__PURE__*/_jsxs(\"p\",{className:\"grid_data\",children:[props.subunit,\"\\uBC88\"]})]})})]}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,columns:12,children:[sub_list,/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,md:6,children:[/*#__PURE__*/_jsx(Item,{children:/*#__PURE__*/_jsx(\"p\",{className:\"grid_data_title\",children:input_title})}),input_list]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,md:6,children:[/*#__PURE__*/_jsx(Item,{children:/*#__PURE__*/_jsx(\"p\",{className:\"grid_data_title\",children:output_title})}),output_list]}),feedback_textfield,code_list,/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,md:6,children:[/*#__PURE__*/_jsx(Item,{children:/*#__PURE__*/_jsx(\"p\",{className:\"grid_data_title\",children:question_title})}),question_list]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,md:6,children:[/*#__PURE__*/_jsx(Item,{children:/*#__PURE__*/_jsx(\"p\",{className:\"grid_data_title\",children:answer_title})}),answer_list]})]}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"problem_bottom_div\",children:/*#__PURE__*/_jsx(Box,{sx:{'& button':{m:0.5}},children:/*#__PURE__*/_jsx(AlertDialog,{alertDialog_title:props.alertDialog_title,textfield_state:props.textfield_state,checkRegisterProblem:props.checkRegisterProblem,handleRegisterClose:function handleRegisterClose(){if(props.alertDialog_title===\"문제등록\"){props.handleRegisterClose(grid_data,input_data,output_data);}}})})})]});}export default ProblemGrid;","map":{"version":3,"sources":["/Users/hongseohee/core-client-aws/CORE/core/src/components/ProblemGrid.js"],"names":["React","useState","styled","Box","Paper","Grid","TextField","AlertDialog","InputVaildtion","Item","theme","typography","body2","padding","spacing","textAlign","color","palette","text","secondary","margin","boxShadow","CssTextField","borderBottomColor","borderColor","ProblemGrid","props","grid_data","setGrid_data","sub_list","input_list","output_list","code_list","answer_list","question_list","input_title","output_title","question_title","answer_title","input_data","setInput_data","output_data","setOutput_data","length","title","feedback_textfield","handleGridChange","event","target","value","name","newTextfieldValue","handleInputChange","handleOutputChange","index","push","input","id","map","output","xs","console","log","button","flexGrow","mainunit","subunit","m","alertDialog_title","textfield_state","checkRegisterProblem","handleRegisterClose"],"mappings":"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","sourcesContent":["/*eslint-disable */\n\nimport React, { useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\nimport '../css/ProblemGrid.css';\nimport AlertDialog from '../components/AlertDialog';\n\nimport * as InputVaildtion from './InputValidation'\n//그리드 박스 스타일 속성 적용\nconst Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(0),\n    textAlign: 'start',\n    color: theme.palette.text.secondary,\n    margin: theme.spacing(1),\n    boxShadow: 'none'\n}));\n\n//텍스트 필드 속성 적용\nconst CssTextField = styled(TextField)({\n\n    '& label.Mui-focused': {\n        color: 'green',\n    },\n    '& .MuiInput-underline:after': {\n        borderBottomColor: 'green',\n    },\n    '& .MuiOutlinedInput-root': {\n        '& fieldset': {\n            borderColor: '#9A30AE',\n        },\n        '&:hover fieldset': {\n            borderColor: 'pink',\n        },\n        '&.Mui-focused fieldset': {\n            borderColor: 'green',\n        },\n    },\n});\n\n\nfunction ProblemGrid(props) {\n    let [grid_data, setGrid_data] = useState(props.grid_data);\n    let sub_list = [];\n    // 입력값, 출력값 초기세팅 \n    let input_list = [];\n    let output_list = [];\n    let code_list = [];\n    let answer_list = [];\n    let question_list = [];\n    let input_title = \"\";\n    let output_title = \"\";\n    let question_title = \"\";\n    let answer_title = \"\";\n\n    let [input_data, setInput_data] = useState(props.input_data)\n    let [output_data, setOutput_data] = useState(props.output_data)\n\n    if (input_data.length == 2) {\n        question_title = input_data[1][1].title;\n        input_title = input_data[0][1].title;\n    }\n    else {\n        input_title = input_data[0].title\n    }\n    if (output_data.length == 2) {\n        answer_title = output_data[1][1].title;\n        output_title = output_data[0][1].title;\n\n    }\n    else {\n        output_title = output_data[0].title;\n    }\n    //피드백 세팅\n    let feedback_textfield = [];\n\n    // 텍스트 필드 값 바꾸기 \n    const handleGridChange = (event) => {\n        const { value, name } = event.target;\n        setGrid_data(InputVaildtion.newTextfieldValue(grid_data, value, name));\n    }\n    const handleInputChange = (event) => {\n        const { value, name } = event.target;\n        setInput_data(InputVaildtion.newTextfieldValue(input_data, value, name));\n    }\n    const handleOutputChange = (event) => {\n        const { value, name } = event.target;\n        setOutput_data(InputVaildtion.newTextfieldValue(output_data, value, name));\n    }\n    //등록 수정\n    if (grid_data[0].value === \"register_modify\") {\n        for (let index = 3; index < 6; index++) {\n            sub_list.push(\n                <Grid key={index} item xs={12}>\n                    <Item key={grid_data[index].id}>\n                        <p key={grid_data[index].title} className=\"grid_data_title\">{grid_data[index].title}</p>\n                        <CssTextField key={grid_data[index].input} fullWidth label={grid_data[index].input} variant=\"outlined\" id=\"custom-css-outlined-input\" multiline rows={10}\n                            name={grid_data[index].title} value={grid_data[index].value} onChange={handleGridChange} />\n                    </Item>\n                </Grid>\n            )\n        }\n\n        input_data.map((input, index) => {\n            input_list.push(\n                <Item key={index}>\n                    <CssTextField key={input.input} fullWidth label={input.input} variant=\"outlined\" id=\"custom-css-outlined-input\" maxRows={1}\n                        name={input.id} value={input.value} onChange={handleInputChange} />\n                </Item>\n            )\n        })\n        output_data.map((output, index) => {\n            output_list.push(\n                <Item key={index}>\n                    <CssTextField key={output.input} fullWidth label={output.input} variant=\"outlined\" id=\"custom-css-outlined-input\" maxRows={1}\n                        name={output.id} value={output.value} onChange={handleOutputChange} />\n                </Item>\n            )\n        })\n    }\n    //선생님 피드백 \n    else if (grid_data[0].value === 'teacher - feedBack') {\n        input_data.map((input, index) => {\n            input_list.push(\n                <Item key={index}>\n                    <p key={input.title} className=\"grid_data\">{input.input}</p>\n                </Item>\n            )\n        })\n        output_data.map((output, index) => {\n            output_list.push(\n                <Item key={index}>\n                    <CssTextField key={output.input} fullWidth label={output.input} variant=\"outlined\" id=\"custom-css-outlined-input\" maxRows={1}\n                        name={output.id} value={output.value} onChange={handleOutputChange} />\n                </Item>\n            )\n        })\n\n        for (let index = 3; index < 8; index++) {\n            let xs = 6;\n\n\n            if (index == 3 || index == 4 || index == 7)\n                xs = 12;\n            sub_list.push(\n                <Grid key={grid_data[index].id} item xs={xs} >\n                    <Item key={grid_data[index].title}>\n                        <p key={grid_data[index].input} className=\"grid_data_title\">{grid_data[index].title}</p>\n                        <p key={grid_data[index].value} className=\"grid_data\">{grid_data[index].value}</p>\n                    </Item>\n                </Grid>)\n        }\n        feedback_textfield.push(\n            <Grid key={grid_data[0].value} item xs={12}>\n                <Item key={grid_data[0].id}>\n                    <p key={grid_data[8].title} className=\"grid_data_title\">{grid_data[8].title}</p>\n                    <CssTextField key={grid_data[8].input} fullWidth label={grid_data[8].input} variant=\"outlined\" id=\"custom-css-outlined-input\" multiline rows={5}\n                        name={grid_data[8].title} value={grid_data[8].value} onChange={handleGridChange} />\n                </Item>\n\n            </Grid>\n        )\n    }\n    //학생 문제 제출쪽\n    //학생 문제 제출쪽\n    //학생 문제 제출쪽\n    //학생 문제 제출쪽\n    //학생 문제 제출쪽\n    //학생 문제 제출쪽\n    //학생 문제 제출쪽\n    //학생 문제 제출쪽\n    //학생 문제 제출쪽\n    //학생 문제 제출쪽\n    else {\n        //문제목록 p 여기는 서버에서 받아오는곳\n        for (let index = 3; index < 5; index++) {\n            sub_list.push(\n                <Grid key={grid_data[index].id} item xs={12} >\n                    <Item key={grid_data[index].title}>\n                        <p key={grid_data[index].input} className=\"grid_data_title\">{grid_data[index].title}</p>\n                        <p key={grid_data[index].value} className=\"grid_data\">{grid_data[index].value}</p>\n                    </Item>\n                </Grid>)\n        }\n\n        //인풋값 서버에서 \n        input_data[0].map((input, index) => {\n            console.log(input);\n            input_list.push(\n                <Item key={index}>\n                    <p key={input.title} className=\"grid_data\">{input.input}</p>\n                </Item>\n            )\n        })\n\n        //학생 코드 및 질문 제출 (처음 문제 제출할때!!!!!!!!!!1)\n        //학생 코드 및 질문 제출 (처음 문제 제출할때!!!!!!!!!!1)\n        //학생 코드 및 질문 제출 (처음 문제 제출할때!!!!!!!!!!1)\n        if (grid_data[0].value === \"student - submit\") {\n            //출력값 서버에서 \n            output_data.map((output, index) => {\n                output_list.push(\n                    <Item key={index}>\n                        <p key={output.input} className=\"grid_data\">{output.input}</p>\n                    </Item>\n                )\n            })\n\n            //질문 입력 하는 곳\n            input_data[1].map((input, index) => {\n                question_list.push(\n\n                    <Item key={index}>\n                        <CssTextField key={input.input} fullWidth label={input.input} variant=\"outlined\" id=\"custom-css-outlined-input\" maxRows={1}\n                            name={input.id} value={input.value} onChange={handleOutputChange} />\n                    </Item>\n\n                )\n            })\n            //코드 입력\n            code_list.push(\n                <Grid key={grid_data[5].id} item xs={12} >\n                    <Item key={grid_data[5].title}>\n                        <p key={grid_data[5].input} className=\"grid_data_title\">{grid_data[5].title}</p>\n                        <CssTextField key={grid_data[5].input} fullWidth label={grid_data[5].input} variant=\"outlined\" id=\"custom-css-outlined-input\" maxRows={1}\n                            name={grid_data[5].id} value={grid_data[5].value} onChange={handleOutputChange} />\n                    </Item>\n                </Grid>)\n\n        }\n        //학생 피드백 완료\n        else if (grid_data[0].value === \"student - feedback_success\") {\n\n\n            output_data[0].map((output, index) => {\n                output_list.push(\n                    <Item key={index}>\n                        <p key={output.input} className=\"grid_data\">{output.input}</p>\n                    </Item>\n                )\n            })\n            //질문 확인\n            output_data[1].map((output, index) => {\n                answer_list.push(\n                    <Item key={index}>\n                        <p key={output.input} className=\"grid_data\">{output.input}</p>\n                    </Item>\n                )\n            })\n            //코드 입력보기 \n            code_list.push(\n                <Grid key={grid_data[5].id} item xs={12} >\n                    <Item key={grid_data[5].title}>\n                        <p key={grid_data[5].input} className=\"grid_data_title\">{grid_data[5].title}</p>\n                        <p key={grid_data[5].value} className=\"grid_data\">{grid_data[5].value}</p>\n                    </Item>\n                </Grid>)\n        }\n        //힉셍 코드 보기 \n        else if (grid_data[0].value === \"student - viewsubmit\") {\n            output_data.map((output, index) => {\n                output_list.push(\n                    <Item key={index}>\n                        <p key={output.input} className=\"grid_data\">{output.input}</p>\n                    </Item>\n                )\n            })\n            //질문 수정?????\n            input_data[1].map((input, index) => {\n                question_list.push(\n                    <Item key={index}>\n                        <CssTextField key={input.input} fullWidth label={input.input} variant=\"outlined\" id=\"custom-css-outlined-input\" maxRows={1}\n                            name={input.id} value={input.value} onChange={handleOutputChange} />\n                    </Item>\n\n                )\n            })\n            //코드 입력보기 \n            code_list.push(\n                <Grid key={grid_data[5].id} item xs={12} >\n                    <Item key={grid_data[5].title}>\n                        <p key={grid_data[5].input} className=\"grid_data_title\">{grid_data[5].title}</p>\n                        <p key={grid_data[5].value} className=\"grid_data\">{grid_data[5].value}</p>\n                    </Item>\n                </Grid>)\n        }\n\n        input_data[1].map((input, index) => {\n            question_list.push(\n\n                <Item key={index}>\n                    <p key={input.title} className=\"grid_data\">{input.input}</p>\n                </Item>\n\n            )\n\n\n\n\n        })\n    }\n\n    let button = []\n    button.push(\n\n    )\n    return (\n        <Box component=\"form\"\n            noValidate\n            autoComplete=\"off\" sx={{ flexGrow: 1 }}>\n            <Grid container spacing={2}>\n\n                {/* 상단 문제 챕터 및 단원 */}\n                <Grid item xs={2}>\n                    <Item>\n                        <p className=\"grid_data_title\">{grid_data[1].title}</p>\n                        <p className=\"grid_data\">{props.mainunit}단원</p>\n                    </Item>\n                </Grid>\n                <Grid item xs={2}>\n                    <Item>\n                        <p className=\"grid_data_title\">{grid_data[2].title}</p>\n                        <p className=\"grid_data\">{props.subunit}번</p>\n                    </Item>\n                </Grid>\n            </Grid>\n\n            <Grid container spacing={2} columns={12}>\n                {/* 여기까지 등록, 수정, 피드백 그리드 동일 !!! */}\n\n                {sub_list}\n                <Grid item xs={6} md={6}>\n                    <Item>\n                        <p className=\"grid_data_title\">{input_title}</p>\n                    </Item>\n                    {input_list}\n                </Grid>\n                <Grid item xs={6} md={6}>\n                    <Item>\n                        <p className=\"grid_data_title\">{output_title}</p>\n                    </Item>\n                    {output_list}\n                </Grid>\n                {feedback_textfield}\n\n                {code_list}\n                <Grid item xs={6} md={6}>\n                    <Item>\n                        <p className=\"grid_data_title\">{question_title}</p>\n                    </Item>\n                    {question_list}\n                </Grid>\n                <Grid item xs={6} md={6}>\n                    <Item>\n                        <p className=\"grid_data_title\">{answer_title}</p>\n                    </Item>\n                    {answer_list}\n                </Grid>\n            </Grid>\n            <hr />\n            <div className=\"problem_bottom_div\">\n                <Box sx={{ '& button': { m: 0.5 } }}>\n                    <AlertDialog alertDialog_title={props.alertDialog_title} textfield_state={props.textfield_state} checkRegisterProblem={props.checkRegisterProblem}\n                        handleRegisterClose={() => {\n                            if (props.alertDialog_title === \"문제등록\") {\n                                props.handleRegisterClose(grid_data, input_data, output_data);\n                            }\n                        }\n                        } />\n                </Box>\n\n            </div>\n        </Box>\n\n\n\n    )\n}\n\nexport default ProblemGrid;"]},"metadata":{},"sourceType":"module"}