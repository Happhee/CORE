{"ast":null,"code":"import _classCallCheck from\"/Users/hongseohee/core-client-aws/CORE/core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/hongseohee/core-client-aws/CORE/core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/hongseohee/core-client-aws/CORE/core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/hongseohee/core-client-aws/CORE/core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/*eslint-disable */import React,{Component}from'react';import'../css/QuizList.css';import{Link,useHistory,useLocation}from'react-router-dom';import{Button,styled}from'@mui/material';import queryString from'query-string';import*as SubmitServer from'../server/SubmitServer';import{makeStyles}from'@material-ui/core/styles';import{withRouter}from\"react-router\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var QuizList=/*#__PURE__*/function(_Component){_inherits(QuizList,_Component);var _super=_createSuper(QuizList);function QuizList(props){var _this;_classCallCheck(this,QuizList);_this=_super.call(this,props);_this.state={boards:[{brdno:1,brdtitle:'별탑 쌓기',submitCount:2,score:'100',set:'미제출',startDate:'2021.10.20',endDate:'2021.10.22'},{brdno:2,brdtitle:'숫자 더하기',submitCount:3,score:'70',set:'첨삭완료',startDate:'2021.10.20',endDate:'2021.10.22'},{brdno:3,brdtitle:'369게임 만들기',submitCount:17,score:'20',set:'첨삭대기중',startDate:'2021.10.20',endDate:'2021.10.22'}]};_this.child=/*#__PURE__*/React.createRef();return _this;}_createClass(QuizList,[{key:\"render\",value:function render(){var boards=this.state.boards;console.log('퀴즈렌더링');var _this$props$match$par=this.props.match.params,userId=_this$props$match$par.userId,classId=_this$props$match$par.classId,title=_this$props$match$par.title;return/*#__PURE__*/_jsxs(\"div\",{className:\"main_div\",children:[/*#__PURE__*/_jsx(\"h2\",{style:{width:'85%',margin:'20px auto',marginTop:'0px'},children:\"WorkBook - QuizList\"}),/*#__PURE__*/_jsx(\"h1\",{style:{width:'85%',margin:'20px auto',marginTop:'0px'},children:\"Chap1)\\uBC18\\uBCF5\\uBB38 \\uC774\\uC6A9\\uD558\\uAE30\"}),/*#__PURE__*/_jsx(\"div\",{style:{width:'85%',margin:'20px auto'},children:/*#__PURE__*/_jsx(\"table\",{border:\"1\",children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsxs(\"tr\",{style:{fontFamily:'esamanru',fontWeight:'bold',height:'50px'},align:\"center\",children:[/*#__PURE__*/_jsx(\"td\",{width:\"50\",children:\"No\"}),/*#__PURE__*/_jsx(\"td\",{width:\"400\",children:\"\\uBB38\\uC81C\\uBA85\"}),/*#__PURE__*/_jsx(\"td\",{width:\"100\",children:\"\\uC81C\\uCD9C\\uD69F\\uC218\"}),/*#__PURE__*/_jsx(\"td\",{width:\"80\",children:\"\\uC810\\uC218\"}),/*#__PURE__*/_jsx(\"td\",{width:\"200\",children:\"\\uC9C4\\uD589\\uD604\\uD669\"}),/*#__PURE__*/_jsx(\"td\",{width:\"200\",children:\"\\uAE30\\uAC04\"})]}),boards.map(function(row){return/*#__PURE__*/_jsx(BoardItem,{row:row,mainunit:\"1\",userId:userId,classId:classId,title:title},row.brdno);})]})})})]});}}]);return QuizList;}(Component);export default withRouter(QuizList);function BoardItem(props){var history=useHistory();var _useLocation=useLocation(),search=_useLocation.search;var queryObj=queryString.parse(search);var mainunit=queryObj.mainunit;return/*#__PURE__*/_jsxs(\"tr\",{align:\"center\",children:[/*#__PURE__*/_jsx(\"td\",{children:props.row.brdno}),/*#__PURE__*/_jsx(\"td\",{className:\"goToUnit\",onClick:function onClick(){history.push(\"/mainpage/student/workbook/quizlist?mainunit=\".concat(props.row.brdno));},style:{cursor:\"pointer\",textDecorationLine:'underline'},children:props.row.brdtitle}),/*#__PURE__*/_jsx(\"td\",{children:props.row.submitCount}),/*#__PURE__*/_jsx(\"td\",{children:props.row.score}),/*#__PURE__*/_jsx(\"td\",{style:{paddingLeft:\"4%\",paddingRight:\"4%\",color:\"white\"},children:function(){if(props.row.set==\"첨삭완료\"){return/*#__PURE__*/_jsx(\"div\",{style:{cursor:\"pointer\",border:\"12px solid #9A30AE\",borderColor:\"#9A30AE\",backgroundColor:\"#9A30AE\",borderRadius:\"20px\"},onClick:function onClick(){history.push({pathname:\"/mainpage/student/workbook/\"+props.userId+\"/\"+props.classId+\"/\"+props.title+\"/\"+\"quizlist/submitmain\",state:{problem_bottom_title:\"\",grid_data:SubmitServer.getGrid_data(\"feedback_success\"),input_data:SubmitServer.getInput_data(\"feedback_success\"),output_data:SubmitServer.getOutput_data(\"feedback_success\"),mainunit:props.mainunit,subunit:props.quizNumber}});},children:props.row.set},\"set\");}else if(props.row.set==\"미제출\"){return/*#__PURE__*/_jsx(\"div\",{style:{cursor:\"pointer\",border:\"12px solid grey\",borderColor:\"grey\",backgroundColor:\"grey\",borderRadius:\"20px\"},onClick:function onClick(){history.push({pathname:\"/mainpage/student/workbook/\"+props.userId+\"/\"+props.classId+\"/\"+props.title+\"/\"+\"quizlist/submitmain\",state:{problem_bottom_title:\"저장하기\",grid_data:SubmitServer.getGrid_data(\"submit\"),input_data:SubmitServer.getInput_data(\"submit\"),output_data:SubmitServer.getOutput_data(\"submit\"),mainunit:props.mainunit,subunit:props.quizNumber}});},children:props.row.set},\"set\");}else if(props.row.set==\"첨삭대기중\"){return/*#__PURE__*/_jsx(\"div\",{style:{cursor:\"pointer\",border:\"12px solid #FF6E8D\",borderColor:\"#FF6E8D\",backgroundColor:\"#FF6E8D\",borderRadius:\"20px\"},onClick:function onClick(){history.push({pathname:\"/mainpage/student/workbook/\"+props.userId+\"/\"+props.classId+\"/\"+props.title+\"/\"+\"quizlist/submitmain\",state:{problem_bottom_title:\"\",grid_data:SubmitServer.getGrid_data(\"viewSubmit\"),input_data:SubmitServer.getInput_data(\"viewSubmit\"),output_data:SubmitServer.getOutput_data(\"viewSubmit\"),mainunit:props.mainunit,subunit:props.quizNumber}});},children:props.row.set},\"set\");}}()},\"set\"),/*#__PURE__*/_jsxs(\"td\",{children:[props.row.startDate,\" - \",props.row.endDate]})]});}","map":{"version":3,"sources":["/Users/hongseohee/core-client-aws/CORE/core/src/student/components/QuizList.js"],"names":["React","Component","Link","useHistory","useLocation","Button","styled","queryString","SubmitServer","makeStyles","withRouter","QuizList","props","state","boards","brdno","brdtitle","submitCount","score","set","startDate","endDate","child","createRef","console","log","match","params","userId","classId","title","width","margin","marginTop","fontFamily","fontWeight","height","map","row","BoardItem","history","search","queryObj","parse","mainunit","push","cursor","textDecorationLine","paddingLeft","paddingRight","color","border","borderColor","backgroundColor","borderRadius","pathname","problem_bottom_title","grid_data","getGrid_data","input_data","getInput_data","output_data","getOutput_data","subunit","quizNumber"],"mappings":"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","sourcesContent":["/*eslint-disable */\n\nimport React, { Component } from 'react';\nimport '../css/QuizList.css'\n\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { Button, styled } from '@mui/material';\nimport queryString from 'query-string'\nimport * as SubmitServer from '../server/SubmitServer'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withRouter } from \"react-router\";\n\n\nclass QuizList extends Component {\n    constructor(props) {\n        super(props);\n        this.child = React.createRef();\n    }\n\n\n    state = {\n        boards: [\n            {\n                brdno: 1,\n                brdtitle: '별탑 쌓기',\n                submitCount: 2,\n                score: '100',\n                set: '미제출',\n                startDate: '2021.10.20',\n                endDate: '2021.10.22'\n            },\n            {\n                brdno: 2,\n                brdtitle: '숫자 더하기',\n                submitCount: 3,\n                score: '70',\n                set: '첨삭완료',\n                startDate: '2021.10.20',\n                endDate: '2021.10.22'\n            },\n            {\n                brdno: 3,\n                brdtitle: '369게임 만들기',\n                submitCount: 17,\n                score: '20',\n                set: '첨삭대기중',\n                startDate: '2021.10.20',\n                endDate: '2021.10.22'\n            }\n        ]\n    }\n\n    render() {\n        const { boards } = this.state;\n        console.log('퀴즈렌더링');\n        const { userId, classId, title } = this.props.match.params;\n\n        return (\n            <div className=\"main_div\">\n                <h2 style={{ width: '85%', margin: '20px auto', marginTop: '0px' }}>WorkBook - QuizList</h2>\n                <h1 style={{ width: '85%', margin: '20px auto', marginTop: '0px' }}>Chap1)반복문 이용하기</h1>\n                <div style={{ width: '85%', margin: '20px auto' }}>\n                    <table border=\"1\" >\n                        <tbody>\n                            <tr style={{ fontFamily: 'esamanru', fontWeight: 'bold', height: '50px' }} align=\"center\" >\n                                <td width=\"50\">No</td>\n                                <td width=\"400\">문제명</td>\n                                <td width=\"100\">제출횟수</td>\n                                <td width=\"80\">점수</td>\n                                <td width=\"200\">진행현황</td>\n                                <td width=\"200\">기간</td>\n\n                            </tr>\n                            {\n                                boards.map(row =>\n                                (<BoardItem key={row.brdno} row={row}\n                                    mainunit=\"1\"\n                                    userId={userId} classId={classId} title={title} />)\n                                )\n                            }\n                        </tbody>\n                    </table>\n\n                </div>\n            </div>\n        );\n    }\n}\nexport default withRouter(QuizList);\n\n\n\nfunction BoardItem(props) {\n    let history = useHistory();\n    let { search } = useLocation();\n    const queryObj = queryString.parse(search);\n    const { mainunit } = queryObj;\n\n    return (\n        <tr align=\"center\">\n            <td>{props.row.brdno}</td>\n            <td className=\"goToUnit\" onClick={() => {\n                history.push(`/mainpage/student/workbook/quizlist?mainunit=${props.row.brdno}`)\n            }}\n                style={{ cursor: \"pointer\", textDecorationLine: 'underline' }}>{props.row.brdtitle}</td>\n            <td>{props.row.submitCount}</td>\n            <td>{props.row.score}</td>\n            <td key=\"set\" style={{ paddingLeft: \"4%\", paddingRight: \"4%\", color: \"white\" }}>\n                {\n                    (() => {\n                        if (props.row.set == \"첨삭완료\") {\n                            return <div key=\"set\" style={{ cursor: \"pointer\", border: \"12px solid #9A30AE\", borderColor: \"#9A30AE\", backgroundColor: \"#9A30AE\", borderRadius: \"20px\" }}\n                                onClick={() => {\n\n                                    history.push({\n                                        pathname: \"/mainpage/student/workbook/\"\n                                            + props.userId + \"/\"\n                                            + props.classId + \"/\"\n                                            + props.title + \"/\"\n                                            + \"quizlist/submitmain\",\n                                        state: {\n                                            problem_bottom_title: \"\",\n                                            grid_data: SubmitServer.getGrid_data(\"feedback_success\"),\n                                            input_data: SubmitServer.getInput_data(\"feedback_success\"),\n                                            output_data: SubmitServer.getOutput_data(\"feedback_success\"),\n                                            mainunit: props.mainunit,\n                                            subunit: props.quizNumber\n                                        }\n                                    })\n                                }}>\n                                {props.row.set}\n                            </div>;\n                        }\n                        else if (props.row.set == \"미제출\") {\n                            return <div key=\"set\" style={{ cursor: \"pointer\", border: \"12px solid grey\", borderColor: \"grey\", backgroundColor: \"grey\", borderRadius: \"20px\" }}\n                                onClick={() => {\n                                    history.push({\n                                        pathname: \"/mainpage/student/workbook/\"\n                                            + props.userId + \"/\"\n                                            + props.classId + \"/\"\n                                            + props.title + \"/\"\n                                            + \"quizlist/submitmain\",\n                                        state: {\n                                            problem_bottom_title: \"저장하기\",\n                                            grid_data: SubmitServer.getGrid_data(\"submit\"),\n                                            input_data: SubmitServer.getInput_data(\"submit\"),\n                                            output_data: SubmitServer.getOutput_data(\"submit\"),\n                                            mainunit: props.mainunit,\n                                            subunit: props.quizNumber\n                                        }\n                                    })\n                                }}>\n                                {props.row.set}\n                            </div>;\n                        }\n                        else if (props.row.set == \"첨삭대기중\") {\n                            return <div key=\"set\" style={{ cursor: \"pointer\", border: \"12px solid #FF6E8D\", borderColor: \"#FF6E8D\", backgroundColor: \"#FF6E8D\", borderRadius: \"20px\" }}\n                                onClick={() => {\n                                    history.push({\n                                        pathname: \"/mainpage/student/workbook/\"\n                                            + props.userId + \"/\"\n                                            + props.classId + \"/\"\n                                            + props.title + \"/\"\n                                            + \"quizlist/submitmain\",\n                                        state: {\n                                            problem_bottom_title: \"\",\n                                            grid_data: SubmitServer.getGrid_data(\"viewSubmit\"),\n                                            input_data: SubmitServer.getInput_data(\"viewSubmit\"),\n                                            output_data: SubmitServer.getOutput_data(\"viewSubmit\"),\n                                            mainunit: props.mainunit,\n                                            subunit: props.quizNumber\n\n                                        }\n                                    })\n                                }}>\n                                {props.row.set}\n                            </div>;\n                        }\n                    }\n                    )()\n                }\n            </td>\n            <td>{props.row.startDate} - {props.row.endDate}</td>\n        </tr>\n    );\n\n}\n\n"]},"metadata":{},"sourceType":"module"}