{"ast":null,"code":"var _jsxFileName = \"/Users/hongseohee/core-client-aws/CORE/core/src/components/AlertDialog.js\",\n    _s = $RefreshSig$();\n\n/*eslint-disable */\nimport React, { useState } from 'react';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { Button, styled } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DeleteBtn = styled(Button)({\n  marginLeft: '0px',\n  textAlign: 'center',\n  backgroundColor: '#E0BFE6',\n  borderRadius: '30px',\n  color: '#8154A0',\n  fontWeight: 'bold',\n  '&:hover': {\n    background: \"#8154A0\",\n    color: \"#FFF\"\n  }\n});\nconst LoginBtn = styled(Button)({\n  marginLeft: '0px',\n  textAlign: 'center',\n  backgroundColor: '#E0BFE6',\n  borderRadius: '30px',\n  color: '#8154A0',\n  fontWeight: 'bold',\n  '&:hover': {\n    background: \"#8154A0\",\n    color: \"#FFF\"\n  }\n});\nconst BasicBtn = styled(Button)({\n  marginLeft: '0px',\n  textAlign: 'center',\n  backgroundColor: '#692498',\n  borderRadius: '30px',\n  color: '#fff',\n  fontWeight: 'bold',\n  '&:hover': {\n    background: \"#E0BFE6\",\n    color: \"#FFF\"\n  }\n});\nconst BasicBtn2 = styled(Button)({\n  marginLeft: '0px',\n  textAlign: 'center',\n  backgroundColor: '#E0BFE6',\n  borderRadius: '30px',\n  color: '#8154A0',\n  fontWeight: 'bold',\n  '&:hover': {\n    background: \"#8154A0\",\n    color: \"#FFF\"\n  }\n});\n\nfunction AlertDialog(props) {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const [textfield_state, setTextfield_state] = useState(props.textfield_state);\n  const [button, setButton] = useState();\n\n  const handleClickOpen = () => {\n    if (props.alertDialog_title === '문제등록') {\n      if (props.checkRegisterProblem()) {\n        setButton( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(BasicBtn, {\n            onClick: handleClose,\n            children: \"\\uCDE8\\uC18C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(BasicBtn, {\n            onClick: handleClose,\n            autoFocus: true,\n            children: \"\\uB4F1\\uB85D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this));\n        setTextfield_state(\"문제를 등록하시겠습니까??\");\n      } else {\n        setButton( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(BasicBtn, {\n            onClick: handleClose,\n            children: \"\\uCDE8\\uC18C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this));\n        setTextfield_state('입력되지 않은 정보가 있습니다!!! 모든 정보를 입력해주세요');\n      }\n\n      setOpen(true);\n    } else if (props.alertDialog_title === '삭제') {\n      setButton( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(BasicBtn, {\n          onClick: handleClose,\n          children: \"\\uCDE8\\uC18C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(BasicBtn, {\n          onClick: handleClose,\n          autoFocus: true,\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this));\n      setTextfield_state(\"문제를 정말로 삭제하시겠습니까??\");\n      setOpen(true);\n    } else if (props.alertDialog_title === 'LOGIN') {\n      if (!props.handleLogin()) {\n        setButton( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(BasicBtn, {\n            onClick: handleClose,\n            children: \"\\uD655\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this));\n        setTextfield_state('입력되지 않은 정보가 있습니다!!! 모든 정보를 입력해주세요');\n      } else {\n        props.goClassroom();\n      }\n\n      setOpen(!props.handleLogin());\n    } else if (props.alertDialog_title === 'SIGN UP') {\n      if (!props.handleSignup()) {\n        setButton( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(BasicBtn, {\n            onClick: handleClose,\n            children: \"\\uD655\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this));\n        setTextfield_state('입력되지 않은 정보가 있습니다!!! 모든 정보를 입력해주세요');\n      } else {\n        setButton( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(BasicBtn, {\n            onClick: handleClose,\n            children: \"\\uB85C\\uADF8\\uC778\\uD558\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this));\n        setTextfield_state('회원가입이 완료되었습니다❤️ 로그인을 해주세요❤️');\n      }\n\n      setOpen(true);\n    }\n  };\n\n  const handleClose = event => {\n    if (event.target.innerText === '등록') {\n      props.handleRegisterClose();\n    } else if (event.target.innerText === '삭제') {\n      props.handleRemoveClose(props.subunit);\n    } else if (event.target.innerText === '로그인하기') {\n      props.goLogin();\n    }\n\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [(() => {\n      if (props.alertDialog_title == 'LOGIN') {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            background: \"white\",\n            marginBottom: \"0px\",\n            border: \"0px\",\n            fontFamily: 'esamanruLight',\n            fontSize: \"30px\",\n            marginLeft: \"110px\"\n          },\n          onClick: handleClickOpen,\n          children: props.alertDialog_title\n        }, \"set\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 36\n        }, this);\n      } else if (props.alertDialog_title === '삭제') {\n        return /*#__PURE__*/_jsxDEV(DeleteBtn, {\n          onClick: handleClickOpen,\n          children: props.alertDialog_title\n        }, \"set\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 36\n        }, this);\n      } else if (props.alertDialog_title === '답변하기') {\n        return /*#__PURE__*/_jsxDEV(BasicBtn, {\n          onClick: handleClickOpen,\n          children: props.alertDialog_title\n        }, \"set\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 36\n        }, this);\n      } else if (props.alertDialog_title === '문제등록' || props.alertDialog_title === '수정하기') {\n        return /*#__PURE__*/_jsxDEV(BasicBtn, {\n          onClick: handleClickOpen,\n          children: props.alertDialog_title\n        }, \"set\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 36\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          children: props.alertDialog_title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 36\n        }, this);\n      }\n    })(), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: props.alertDialog_title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-description\",\n          children: textfield_state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: button\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AlertDialog, \"skaFvNhuTd4nHk7/EQuTT16brZY=\");\n\n_c = AlertDialog;\nexport default AlertDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlertDialog\");","map":{"version":3,"sources":["/Users/hongseohee/core-client-aws/CORE/core/src/components/AlertDialog.js"],"names":["React","useState","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Button","styled","DeleteBtn","marginLeft","textAlign","backgroundColor","borderRadius","color","fontWeight","background","LoginBtn","BasicBtn","BasicBtn2","AlertDialog","props","open","setOpen","textfield_state","setTextfield_state","button","setButton","handleClickOpen","alertDialog_title","checkRegisterProblem","handleClose","handleLogin","goClassroom","handleSignup","event","target","innerText","handleRegisterClose","handleRemoveClose","subunit","goLogin","marginBottom","border","fontFamily","fontSize"],"mappings":"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","sourcesContent":["/*eslint-disable */\n\nimport React, { useState } from 'react';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { Button, styled } from '@mui/material';\n\nconst DeleteBtn = styled(Button)({\n    marginLeft: '0px',\n    textAlign:'center',\n    backgroundColor:'#E0BFE6',\n    borderRadius:'30px',\n    color:'#8154A0',\n    fontWeight:'bold',\n    '&:hover': {\n        background: \"#8154A0\",\n        color:\"#FFF\"\n     }\n});\nconst LoginBtn = styled(Button)({\n    marginLeft: '0px',\n    textAlign:'center',\n    backgroundColor:'#E0BFE6',\n    borderRadius:'30px',\n    color:'#8154A0',\n    fontWeight:'bold',\n    '&:hover': {\n        background: \"#8154A0\",\n        color:\"#FFF\"\n     }\n});\nconst BasicBtn = styled(Button)({\n    marginLeft: '0px',\n    textAlign: 'center',\n    backgroundColor: '#692498',\n    borderRadius: '30px',\n    color: '#fff',\n    fontWeight: 'bold',\n    '&:hover': {\n        background: \"#E0BFE6\",\n        color: \"#FFF\"\n    }\n});\nconst BasicBtn2 = styled(Button)({\nmarginLeft: '0px',\n    textAlign: 'center',\n    backgroundColor: '#E0BFE6',\n    borderRadius: '30px',\n    color: '#8154A0',\n    fontWeight: 'bold',\n    '&:hover': {\n        background: \"#8154A0\",\n        color: \"#FFF\"\n    }\n});\n\nfunction AlertDialog(props) {\n    const [open, setOpen] = useState(false);\n    const [textfield_state, setTextfield_state] = useState(props.textfield_state);\n\n    const [button, setButton] = useState();\n    const handleClickOpen = () => {\n        if (props.alertDialog_title === '문제등록') {\n            if (props.checkRegisterProblem()) {\n                setButton(\n                    <div>\n                        <BasicBtn onClick={handleClose}>취소</BasicBtn>\n                        <BasicBtn onClick={handleClose} autoFocus>등록</BasicBtn>\n                    </div>\n                )\n                setTextfield_state(\"문제를 등록하시겠습니까??\");\n            }\n            else {\n                setButton(\n                    <div>\n                        <BasicBtn onClick={handleClose}>취소</BasicBtn>\n                    </div>\n                )\n                setTextfield_state('입력되지 않은 정보가 있습니다!!! 모든 정보를 입력해주세요');\n            }\n            setOpen(true);\n\n        }\n        else if (props.alertDialog_title === '삭제') {\n            setButton(\n                <div>\n                    <BasicBtn onClick={handleClose}>취소</BasicBtn>\n                    <BasicBtn onClick={handleClose} autoFocus>삭제</BasicBtn>\n                </div>\n            )\n            setTextfield_state(\"문제를 정말로 삭제하시겠습니까??\");\n            setOpen(true);\n\n        }\n        else if (props.alertDialog_title === 'LOGIN') {\n\n            if (!props.handleLogin()) {\n                setButton(\n                    <div>\n                        <BasicBtn onClick={handleClose}>확인</BasicBtn>\n                    </div>\n                )\n                setTextfield_state('입력되지 않은 정보가 있습니다!!! 모든 정보를 입력해주세요');\n            } else {\n                props.goClassroom();\n            }\n\n            setOpen(!props.handleLogin());\n        }\n        else if (props.alertDialog_title === 'SIGN UP') {\n            if (!props.handleSignup()) {\n                setButton(\n                    <div>\n                        <BasicBtn onClick={handleClose}>확인</BasicBtn>\n                    </div>\n                )\n                setTextfield_state('입력되지 않은 정보가 있습니다!!! 모든 정보를 입력해주세요');\n            } else {\n                setButton(\n                    <div>\n                        <BasicBtn onClick={handleClose}>로그인하기</BasicBtn>\n                    </div>\n                )\n                setTextfield_state('회원가입이 완료되었습니다❤️ 로그인을 해주세요❤️');\n\n            }\n\n            setOpen(true);\n        }\n    };\n\n    const handleClose = (event) => {\n        if (event.target.innerText === '등록') {\n            props.handleRegisterClose();\n        }\n        else if (event.target.innerText === '삭제') {\n            props.handleRemoveClose(props.subunit);\n        }\n        else if (event.target.innerText === '로그인하기') {\n            props.goLogin();\n        }\n        setOpen(false);\n    };\n\n    return (\n            < >\n            {\n                    (() => {\n\n                        if (props.alertDialog_title == 'LOGIN' ) {\n                            return <button style={{background:\"white\",marginBottom:\"0px\",border:\"0px\",  fontFamily: 'esamanruLight',fontSize:\"30px\"\n                            ,marginLeft:\"110px\"\n                            }}  onClick={handleClickOpen} key=\"set\">\n                                {props.alertDialog_title}\n                            </button>;\n                        }\n                        else if(props.alertDialog_title === '삭제'){\n                            return <DeleteBtn  onClick={handleClickOpen} key=\"set\">\n                                {props.alertDialog_title}\n                            </DeleteBtn>;\n                        }\n                        else if(props.alertDialog_title === '답변하기'){\n                            return <BasicBtn  onClick={handleClickOpen} key=\"set\">\n                            {props.alertDialog_title}\n                        </BasicBtn>;\n                        }\n                        else if(props.alertDialog_title === '문제등록' ||props.alertDialog_title === '수정하기'){\n                            return <BasicBtn  onClick={handleClickOpen} key=\"set\">\n                            {props.alertDialog_title}\n                        </BasicBtn>;\n                        }\n                        else {\n                            return <button>\n                                {props.alertDialog_title}\n                                </button>\n                        }\n                    }\n                    )()\n                }\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    {props.alertDialog_title}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        {textfield_state}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    {button}\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n}\n\nexport default AlertDialog;\n"]},"metadata":{},"sourceType":"module"}