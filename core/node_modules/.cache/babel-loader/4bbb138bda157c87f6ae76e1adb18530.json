{"ast":null,"code":"var _jsxFileName = \"/Users/hongseohee/core-client-aws/CORE/core/src/teacher/components/ProblemMain.js\",\n    _s = $RefreshSig$();\n\n/*eslint-disable */\nimport '../css/ProblemAdd.css';\nimport React, { useEffect, useState } from 'react';\nimport ProblemGrid from '../../components/ProblemGrid';\nimport { useHistory, withRouter, useParams, useLocation } from 'react-router-dom';\nimport { Button, useThemeProps } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport * as InputValidation from '../../components/InputValidation';\nimport AlertDialog from '../../components/AlertDialog';\nimport queryString from 'query-string';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProblemAdd() {\n  _s();\n\n  const {\n    search\n  } = useLocation();\n  const location = useLocation();\n  const queryObj = queryString.parse(search);\n  const {\n    mainunit,\n    subunit\n  } = queryObj;\n  let history = useHistory();\n  let problem_bottom_title = location.state.problem_bottom_title;\n  let [grid_data, setGrid_data] = useState(location.state.grid_data);\n  let [input_data, setInput_data] = useState(location.state.input_data);\n  let [output_data, setOutput_data] = useState(location.state.output_data);\n  let [textfield_state, setTextfield_state] = useState('');\n\n  function goList() {\n    history.goBack();\n  }\n\n  function checkRegisterProblem() {\n    return InputValidation.checkTextfieldValue(input_data) && InputValidation.checkTextfieldValue(output_data) && InputValidation.checkTextfieldValue(grid_data);\n  }\n\n  function handleRegisterClose() {\n    console.log(\"등록해주세요\"); // 서버로 값 보내줘야함!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n    goList();\n  }\n\n  console.log(\"문제추가렌더링\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main_problem_div\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sub_div\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"problem_top_div\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"problem_title\",\n          children: grid_data[0].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            '& button': {\n              m: 0.5\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"secondary\",\n              onClick: goList,\n              children: \"\\uBAA9\\uB85D\\uC73C\\uB85C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), \"                    \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProblemGrid, {\n        mainunit: mainunit,\n        subunit: subunit,\n        grid_data: grid_data,\n        input_data: input_data,\n        output_data: output_data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"problem_bottom_div\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            '& button': {\n              m: 0.5\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(AlertDialog, {\n            alertDialog_title: problem_bottom_title,\n            textfield_state: textfield_state,\n            checkRegisterProblem: checkRegisterProblem,\n            handleRegisterClose: handleRegisterClose\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProblemAdd, \"EKB7HjgzeQ4OeIKeDxfFby7lprs=\", false, function () {\n  return [useLocation, useLocation, useHistory];\n});\n\n_c = ProblemAdd;\nexport default _c2 = withRouter(ProblemAdd);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProblemAdd\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/hongseohee/core-client-aws/CORE/core/src/teacher/components/ProblemMain.js"],"names":["React","useEffect","useState","ProblemGrid","useHistory","withRouter","useParams","useLocation","Button","useThemeProps","Box","InputValidation","AlertDialog","queryString","ProblemAdd","search","location","queryObj","parse","mainunit","subunit","history","problem_bottom_title","state","grid_data","setGrid_data","input_data","setInput_data","output_data","setOutput_data","textfield_state","setTextfield_state","goList","goBack","checkRegisterProblem","checkTextfieldValue","handleRegisterClose","console","log","title","m"],"mappings":"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","sourcesContent":["/*eslint-disable */\n\nimport '../css/ProblemAdd.css'\nimport React, { useEffect, useState } from 'react';\nimport ProblemGrid from '../../components/ProblemGrid';\nimport { useHistory, withRouter, useParams, useLocation } from 'react-router-dom';\nimport { Button, useThemeProps } from '@mui/material';\nimport Box from '@mui/material/Box'\nimport * as InputValidation from '../../components/InputValidation';\nimport AlertDialog from '../../components/AlertDialog';\nimport queryString from 'query-string'\n\n\nfunction ProblemAdd() {\n\n    const { search } = useLocation();\n    const location = useLocation();\n    const queryObj = queryString.parse(search);\n    const { mainunit, subunit } = queryObj;\n    let history = useHistory();\n\n    let problem_bottom_title = location.state.problem_bottom_title;\n    let [grid_data, setGrid_data] = useState(location.state.grid_data);\n    let [input_data, setInput_data] = useState(location.state.input_data);\n    let [output_data, setOutput_data] = useState(location.state.output_data);\n\n    let [textfield_state, setTextfield_state] = useState('');\n\n    function goList() {\n\n        history.goBack()\n\n    }\n\n    function checkRegisterProblem() {\n\n        return (InputValidation.checkTextfieldValue(input_data) &&\n            InputValidation.checkTextfieldValue(output_data) && InputValidation.checkTextfieldValue(grid_data))\n    }\n    function handleRegisterClose() {\n        console.log(\"등록해주세요\")\n        // 서버로 값 보내줘야함!!!!!!!!!!!!!!!!!!!!!!!!!!!\n        goList();\n    }\n    console.log(\"문제추가렌더링\")\n\n    return (\n        <div className=\"main_problem_div\">\n            <div className=\"sub_div\">\n                <div className=\"problem_top_div\">\n                    <span className=\"problem_title\">{grid_data[0].title}</span>\n                    <Box sx={{ '& button': { m: 0.5 } }}>\n\n                        <div>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={goList}>목록으로</Button>\n                        </div>                    </Box>\n\n\n                </div>\n                <hr />\n                <ProblemGrid\n                    mainunit={mainunit} subunit={subunit}\n                    grid_data={grid_data} input_data={input_data} output_data={output_data} />\n                <hr />\n                <div className=\"problem_bottom_div\">\n                    <Box sx={{ '& button': { m: 0.5 } }}>\n                        <AlertDialog alertDialog_title={problem_bottom_title} textfield_state={textfield_state} checkRegisterProblem={checkRegisterProblem}\n                            handleRegisterClose={handleRegisterClose} />\n                    </Box>\n\n                </div>\n\n            </div>\n\n        </div>\n    );\n\n}\n\nexport default withRouter(ProblemAdd);"]},"metadata":{},"sourceType":"module"}