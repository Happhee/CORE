{"ast":null,"code":"/*eslint-disable */import React from'react';import{useHistory}from'react-router-dom';import Button from'@mui/material/Button';import*as ProblemServer from'../server/ProblemServer';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function FeedBackInfo(props){var history=useHistory();return/*#__PURE__*/_jsxs(\"tr\",{align:\"center\",style:{height:'60px'},children:[/*#__PURE__*/_jsx(\"td\",{children:props.no},\"no\"),/*#__PURE__*/_jsx(\"td\",{children:props.id},\"id\"),/*#__PURE__*/_jsx(\"td\",{children:props.name},\"name\"),/*#__PURE__*/_jsx(\"td\",{children:props.unit},\"unit\"),/*#__PURE__*/_jsx(\"td\",{children:props.quizNumber},\"quizNumber\"),/*#__PURE__*/_jsx(\"td\",{style:{paddingLeft:\"4%\",paddingRight:\"4%\",color:\"white\"},children:function(){if(props.set==\"답변완료\"){return/*#__PURE__*/_jsx(\"div\",{style:{border:\"12px solid #9A30AE\",borderColor:\"#9A30AE\",backgroundColor:\"#9A30AE\",borderRadius:\"20px\"},children:props.set},\"set\");}else{return/*#__PURE__*/_jsx(\"div\",{style:{border:\"12px solid grey\",borderColor:\"grey\",backgroundColor:\"grey\",borderRadius:\"20px\"},children:props.set},\"set\");}}()},\"set\"),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{marginleft:\"300px\",style:{backgroundColor:\"white\",border:\"0\",fontFamily:'esamanru',fontWeight:'normal',height:'50px',cursor:\"pointer\",textDecorationLine:'underline'},onClick:function onClick(){history.push({pathname:\"/mainpage/teacher/workbook/quizlist/problemmain?mainunit=\"+props.unit+\"&subunit=\"+props.quizNumber,state:{problem_bottom_title:\"답변하기\",grid_data:ProblemServer.getGrid_data(\"feedback\"),input_data:ProblemServer.getInput_data(\"feedback\"),output_data:ProblemServer.getOutput_data(\"feedback\")}});},children:props.score})},\"score\")]});}export default FeedBackInfo;","map":{"version":3,"sources":["/Users/hongseohee/core-client-aws/CORE/core/src/teacher/components/FeedBackInfo.js"],"names":["React","useHistory","Button","ProblemServer","FeedBackInfo","props","history","height","no","id","name","unit","quizNumber","paddingLeft","paddingRight","color","set","border","borderColor","backgroundColor","borderRadius","fontFamily","fontWeight","cursor","textDecorationLine","push","pathname","state","problem_bottom_title","grid_data","getGrid_data","input_data","getInput_data","output_data","getOutput_data","score"],"mappings":"AAAA,mBAEA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,MAAO,GAAKC,CAAAA,aAAZ,KAA+B,yBAA/B,C,wFAGA,QAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,CACzB,GAAIC,CAAAA,OAAO,CAAGL,UAAU,EAAxB,CACA,mBACI,YAAI,KAAK,CAAC,QAAV,CAAmB,KAAK,CAAE,CAAEM,MAAM,CAAE,MAAV,CAA1B,wBACI,oBAAcF,KAAK,CAACG,EAApB,EAAQ,IAAR,CADJ,cAEI,oBAAcH,KAAK,CAACI,EAApB,EAAQ,IAAR,CAFJ,cAGI,oBAAgBJ,KAAK,CAACK,IAAtB,EAAQ,MAAR,CAHJ,cAII,oBAAgBL,KAAK,CAACM,IAAtB,EAAQ,MAAR,CAJJ,cAKI,oBAAsBN,KAAK,CAACO,UAA5B,EAAQ,YAAR,CALJ,cAMI,WAAc,KAAK,CAAE,CAAEC,WAAW,CAAE,IAAf,CAAqBC,YAAY,CAAE,IAAnC,CAAyCC,KAAK,CAAE,OAAhD,CAArB,UAES,UAAM,CACH,GAAIV,KAAK,CAACW,GAAN,EAAa,MAAjB,CAAyB,CACrB,mBAAO,YAAe,KAAK,CAAE,CAAEC,MAAM,CAAE,oBAAV,CAAgCC,WAAW,CAAE,SAA7C,CAAwDC,eAAe,CAAE,SAAzE,CAAoFC,YAAY,CAAE,MAAlG,CAAtB,UACFf,KAAK,CAACW,GADJ,EAAS,KAAT,CAAP,CAGH,CAJD,IAKK,CACD,mBAAO,YAAe,KAAK,CAAE,CAAEC,MAAM,CAAE,iBAAV,CAA6BC,WAAW,CAAE,MAA1C,CAAkDC,eAAe,CAAE,MAAnE,CAA2EC,YAAY,CAAE,MAAzF,CAAtB,UACFf,KAAK,CAACW,GADJ,EAAS,KAAT,CAAP,CAGH,CACJ,CAXD,EAFR,EAAQ,KAAR,CANJ,cAuBI,iCACI,eAAQ,UAAU,CAAC,OAAnB,CAA2B,KAAK,CAAE,CAAEG,eAAe,CAAE,OAAnB,CAA4BF,MAAM,CAAE,GAApC,CAAyCI,UAAU,CAAE,UAArD,CAAiEC,UAAU,CAAE,QAA7E,CAAuFf,MAAM,CAAE,MAA/F,CAAuGgB,MAAM,CAAE,SAA/G,CAA0HC,kBAAkB,CAAE,WAA9I,CAAlC,CACI,OAAO,CAAE,kBAAM,CACXlB,OAAO,CAACmB,IAAR,CAAa,CACTC,QAAQ,CAAE,4DAA8DrB,KAAK,CAACM,IAApE,CAA2E,WAA3E,CAAyFN,KAAK,CAACO,UADhG,CAETe,KAAK,CAAE,CACHC,oBAAoB,CAAE,MADnB,CAEHC,SAAS,CAAE1B,aAAa,CAAC2B,YAAd,CAA2B,UAA3B,CAFR,CAGHC,UAAU,CAAE5B,aAAa,CAAC6B,aAAd,CAA4B,UAA5B,CAHT,CAIHC,WAAW,CAAE9B,aAAa,CAAC+B,cAAd,CAA6B,UAA7B,CAJV,CAFE,CAAb,EASH,CAXL,UAWQ7B,KAAK,CAAC8B,KAXd,EADJ,EAAQ,OAAR,CAvBJ,GADJ,CAwCH,CACD,cAAe/B,CAAAA,YAAf","sourcesContent":["/*eslint-disable */\n\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Button from '@mui/material/Button'\nimport * as ProblemServer from '../server/ProblemServer'\n\n\nfunction FeedBackInfo(props) {\n    let history = useHistory();\n    return (\n        <tr align=\"center\" style={{ height: '60px' }}>\n            <td key=\"no\">{props.no}</td>\n            <td key=\"id\">{props.id}</td>\n            <td key=\"name\">{props.name}</td>\n            <td key=\"unit\">{props.unit}</td>\n            <td key=\"quizNumber\">{props.quizNumber}</td>\n            <td key=\"set\" style={{ paddingLeft: \"4%\", paddingRight: \"4%\", color: \"white\" }}>\n                {\n                    (() => {\n                        if (props.set == \"답변완료\") {\n                            return <div key=\"set\" style={{ border: \"12px solid #9A30AE\", borderColor: \"#9A30AE\", backgroundColor: \"#9A30AE\", borderRadius: \"20px\" }}>\n                                {props.set}\n                            </div>;\n                        }\n                        else {\n                            return <div key=\"set\" style={{ border: \"12px solid grey\", borderColor: \"grey\", backgroundColor: \"grey\", borderRadius: \"20px\" }}>\n                                {props.set}\n                            </div>;\n                        }\n                    }\n                    )()\n                }\n            </td>\n            <td key=\"score\">\n                <button marginleft=\"300px\" style={{ backgroundColor: \"white\", border: \"0\", fontFamily: 'esamanru', fontWeight: 'normal', height: '50px', cursor: \"pointer\", textDecorationLine: 'underline' }}\n                    onClick={() => {\n                        history.push({\n                            pathname: \"/mainpage/teacher/workbook/quizlist/problemmain?mainunit=\" + props.unit + \"&subunit=\" + props.quizNumber,\n                            state: {\n                                problem_bottom_title: \"답변하기\",\n                                grid_data: ProblemServer.getGrid_data(\"feedback\"),\n                                input_data: ProblemServer.getInput_data(\"feedback\"),\n                                output_data: ProblemServer.getOutput_data(\"feedback\")\n                            }\n                        })\n                    }}>{props.score}</button>\n            </td>\n        </tr>\n    )\n}\nexport default FeedBackInfo;\n\n\n"]},"metadata":{},"sourceType":"module"}