{"ast":null,"code":"import _slicedToArray from\"/Users/hongseohee/core-client-aws/CORE/core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/*eslint-disable */import'../css/ProblemAdd.css';import React,{useEffect,useState}from'react';import ProblemGrid from'../../components/ProblemGrid';import{useHistory,withRouter,useParams,useLocation}from'react-router-dom';import{Button,styled}from'@mui/material';import Box from'@mui/material/Box';import*as InputValidation from'../../components/InputValidation';import AlertDialog from'../../components/AlertDialog';import queryString from'query-string';//로그인 성공 후 페이지 -> 서버로부터 강의실리스트를 가져와야함 \nimport{useDispatch}from'react-redux';import{addProblem}from'../../_actions/teacher_action';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Back=styled(Button)({marginLeft:'87%',height:'40px',paddingBottom:\"3%\",textAlign:'center',backgroundColor:'#692498',borderRadius:'30px',color:'#fff',fontFamily:'esamanruLight',fontWeight:'normal','&:hover':{background:\"#E0BFE6\",color:\"#8154A0\"}});function ProblemAdd(_ref){var match=_ref.match;var userId=match.params.userId;var dispatch=useDispatch();var location=useLocation();var history=useHistory();var mainunit=location.state.mainunit;var subunit=location.state.subunit;var problem_bottom_title=location.state.problem_bottom_title;var _useState=useState(location.state.grid_data),_useState2=_slicedToArray(_useState,2),grid_data=_useState2[0],setGrid_data=_useState2[1];var _useState3=useState(location.state.input_data),_useState4=_slicedToArray(_useState3,2),input_data=_useState4[0],setInput_data=_useState4[1];var _useState5=useState(location.state.output_data),_useState6=_slicedToArray(_useState5,2),output_data=_useState6[0],setOutput_data=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),textfield_state=_useState8[0],setTextfield_state=_useState8[1];function goList(){history.goBack();}function checkRegisterProblem(){return InputValidation.checkTextfieldValue(input_data)&&InputValidation.checkTextfieldValue(output_data)&&InputValidation.checkTextfieldValue(grid_data);}function handleRegisterClose(grid_data,input_data,output_data){if(problem_bottom_title===\"문제등록\"){console.log(grid_data);console.log(input_data);console.log(output_data);var input_data_value=[];var output_data_value=[];input_data.map(function(input){input_data_value.push(input.value);});output_data.map(function(output){output_data_value.push(output.value);});var body={name:grid_data[3].value,owner:userId,problem_description:grid_data[4].value,sample_input:input_data[0].value,sample_output:output_data[0].value,input_description:\"정수\",output_description:\"정수\",input_list:input_data_value,output_list:output_data_value,solution:grid_data[5].value,difficulty:2,memory_limit:12345678,time_limit:12345678};dispatch(addProblem(body)).then(function(res){if(res.payload.addSuceess){alert('등록이완료되었습니다!!');goList();}else{alert(res.payload.message);}}).catch(function(err){console.log(err);});}console.log(\"등록해주세요\");// 서버로 값 보내줘야함!!!!!!!!!!!!!!!!!!!!!!!!!!!\n}console.log(\"문제추가렌더링\");return/*#__PURE__*/_jsx(\"div\",{className:\"main_problem_div\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"sub_div\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"problem_top_div\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"problem_top_div\",children:grid_data[0].title}),/*#__PURE__*/_jsx(Box,{sx:{'& button':{m:0.5}},children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Back,{onClick:goList,children:/*#__PURE__*/_jsx(\"h4\",{children:\"\\uBAA9\\uB85D\\uC73C\\uB85C\"})})})})]}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(ProblemGrid,{mainunit:mainunit,subunit:subunit,grid_data:grid_data,input_data:input_data,output_data:output_data,alertDialog_title:problem_bottom_title,textfield_state:textfield_state,checkRegisterProblem:checkRegisterProblem,handleRegisterClose:handleRegisterClose})]})});}export default withRouter(ProblemAdd);","map":{"version":3,"sources":["/Users/hongseohee/core-client-aws/CORE/core/src/teacher/components/ProblemMain.js"],"names":["React","useEffect","useState","ProblemGrid","useHistory","withRouter","useParams","useLocation","Button","styled","Box","InputValidation","AlertDialog","queryString","useDispatch","addProblem","Back","marginLeft","height","paddingBottom","textAlign","backgroundColor","borderRadius","color","fontFamily","fontWeight","background","ProblemAdd","match","userId","params","dispatch","location","history","mainunit","state","subunit","problem_bottom_title","grid_data","setGrid_data","input_data","setInput_data","output_data","setOutput_data","textfield_state","setTextfield_state","goList","goBack","checkRegisterProblem","checkTextfieldValue","handleRegisterClose","console","log","input_data_value","output_data_value","map","input","push","value","output","body","name","owner","problem_description","sample_input","sample_output","input_description","output_description","input_list","output_list","solution","difficulty","memory_limit","time_limit","then","res","payload","addSuceess","alert","message","catch","err","title","m"],"mappings":"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","sourcesContent":["/*eslint-disable */\n\nimport '../css/ProblemAdd.css'\nimport React, { useEffect, useState } from 'react';\nimport ProblemGrid from '../../components/ProblemGrid';\nimport { useHistory, withRouter, useParams, useLocation } from 'react-router-dom';\nimport { Button, styled } from '@mui/material';\nimport Box from '@mui/material/Box'\nimport * as InputValidation from '../../components/InputValidation';\nimport AlertDialog from '../../components/AlertDialog';\nimport queryString from 'query-string'\n\n//로그인 성공 후 페이지 -> 서버로부터 강의실리스트를 가져와야함 \nimport { useDispatch } from 'react-redux'\nimport { addProblem } from '../../_actions/teacher_action'\nconst Back = styled(Button)({\n    marginLeft: '87%',\n    height: '40px',\n    paddingBottom: \"3%\",\n    textAlign: 'center',\n    backgroundColor: '#692498',\n    borderRadius: '30px',\n    color: '#fff',\n    fontFamily: 'esamanruLight',\n    fontWeight: 'normal',\n    '&:hover': {\n        background: \"#E0BFE6\",\n        color: \"#8154A0\"\n    }\n});\n\nfunction ProblemAdd({ match }) {\n\n    const { userId } = match.params\n    const dispatch = useDispatch();\n\n    const location = useLocation();\n\n    let history = useHistory();\n\n    let mainunit = location.state.mainunit;\n    let subunit = location.state.subunit;\n    let problem_bottom_title = location.state.problem_bottom_title;\n    let [grid_data, setGrid_data] = useState(location.state.grid_data);\n    let [input_data, setInput_data] = useState(location.state.input_data);\n    let [output_data, setOutput_data] = useState(location.state.output_data);\n\n\n    let [textfield_state, setTextfield_state] = useState('');\n\n    function goList() {\n        history.goBack()\n    }\n\n\n    function checkRegisterProblem() {\n        return (InputValidation.checkTextfieldValue(input_data) &&\n            InputValidation.checkTextfieldValue(output_data) && InputValidation.checkTextfieldValue(grid_data))\n    }\n\n\n    function handleRegisterClose(grid_data, input_data, output_data) {\n        if (problem_bottom_title === \"문제등록\") {\n            console.log(grid_data);\n            console.log(input_data);\n            console.log(output_data);\n            let input_data_value = []\n            let output_data_value = []\n\n            input_data.map(input => {\n                input_data_value.push(input.value);\n            })\n\n            output_data.map(output => {\n                output_data_value.push(output.value)\n            })\n            let body = {\n                name: grid_data[3].value,\n                owner: userId,\n                problem_description: grid_data[4].value,\n                sample_input: input_data[0].value,\n                sample_output: output_data[0].value,\n                input_description: \"정수\",\n                output_description: \"정수\",\n                input_list: input_data_value,\n                output_list: output_data_value,\n                solution: grid_data[5].value,\n                difficulty: 2,\n                memory_limit: 12345678,\n                time_limit: 12345678\n            }\n\n            dispatch(addProblem(body))\n                .then(res => {\n                    if (res.payload.addSuceess) {\n                        alert('등록이완료되었습니다!!')\n\n                        goList();\n                    } else {\n                        alert(res.payload.message)\n                    }\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n\n\n        }\n        console.log(\"등록해주세요\")\n        // 서버로 값 보내줘야함!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n    }\n\n    console.log(\"문제추가렌더링\")\n    return (\n        <div className=\"main_problem_div\">\n            <div className=\"sub_div\">\n                <div className=\"problem_top_div\">\n                    <h5 className=\"problem_top_div\">{grid_data[0].title}</h5>\n                    <Box sx={{ '& button': { m: 0.5 } }}>\n                        <div>\n                            <Back onClick={goList}><h4>목록으로</h4></Back>\n                        </div>\n                    </Box>\n\n\n                </div>\n                <hr />\n                <ProblemGrid\n                    mainunit={mainunit} subunit={subunit}\n                    grid_data={grid_data} input_data={input_data} output_data={output_data}\n                    alertDialog_title={problem_bottom_title} textfield_state={textfield_state} checkRegisterProblem={checkRegisterProblem}\n                    handleRegisterClose={handleRegisterClose} />\n\n                {/* <div className=\"problem_bottom_div\">\n                    <Box sx={{ '& button': { m: 0.5 } }}>\n                        <AlertDialog alertDialog_title={problem_bottom_title} textfield_state={textfield_state} checkRegisterProblem={checkRegisterProblem}\n                            handleRegisterClose={handleRegisterClose} />\n                    </Box>\n\n                </div> */}\n\n            </div>\n\n        </div>\n    );\n\n}\n\nexport default withRouter(ProblemAdd);"]},"metadata":{},"sourceType":"module"}