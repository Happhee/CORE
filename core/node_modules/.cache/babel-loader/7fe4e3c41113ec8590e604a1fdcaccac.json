{"ast":null,"code":"var _jsxFileName = \"/Users/hongseohee/core-client-aws/CORE/core/src/components/ClassRoom.js\",\n    _s = $RefreshSig$();\n\n/*eslint-disable */\nimport React, { useEffect, useState } from 'react';\nimport { ReactComponent as Core_Logo } from \"@svgr/webpack?-svgo,+titleProp,+ref!../css/Core.svg\";\nimport '../css/ClassRoom.css';\nimport { Link } from 'react-router-dom';\nimport Toolbar from './Toolbar';\nimport CoreDialog from './CoreDialog';\nimport { useLocation, useHistory } from 'react-router-dom'; //로그인 성공 후 페이지 -> 서버로부터 강의실리스트를 가져와야함 \n\nimport { useDispatch } from 'react-redux';\nimport { getUser } from '../_actions/user_action';\nimport { addClassroom, createClassroom } from '../_actions/teacher_action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ClassRoom({\n  match\n}) {\n  _s();\n\n  let toolbar = [{\n    id: 1,\n    title: 'My',\n    link: '/teacher/my'\n  }, {\n    id: 2,\n    title: 'WorkBank',\n    link: '/teacher/workbank'\n  }];\n  const {\n    mode,\n    userId\n  } = match.params;\n  const location = useLocation();\n  const history = useHistory();\n  console.log(userId);\n  let startpage = null;\n  let add_button = null;\n  let dialog = null; //서버로 부터 강의실 목록 가져오기 \n\n  const dispatch = useDispatch();\n  let [classrooms, setClassrooms] = useState([]);\n  let objectClassroom = [];\n  let [class_id, setClass_id] = useState([]);\n  useEffect(() => {\n    //클래스룸 가져오기\n    dispatch(getUser(location.state.login_id)).then(res => {\n      if (res.payload.getSuccess) {\n        res.payload.data.belonged_classes.map(data => {\n          objectClassroom.push({\n            title: data.title,\n            class_id: data.class_id\n          });\n        });\n        setClassrooms(objectClassroom);\n      } else {\n        console.log(res.payload);\n      }\n    });\n  }, []);\n  console.log(classrooms);\n\n  function insertClassroom(value) {\n    let class_id = location.state.login_id + Date.now();\n    let body = {\n      nick: location.state.login_id,\n      belonged_classes: [{\n        title: value,\n        class_id: class_id\n      }]\n    };\n    dispatch(addClassroom(body)).then(res => {\n      console.log(\"업데이트 ->\");\n      console.log(res.payload);\n\n      if (res.payload.updateSuccess) {\n        setClassrooms(preClassrooms => [...preClassrooms, body.belonged_classes[0]]);\n      } else {\n        alert(res.payload.message);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n    let class_body = {\n      name: value,\n      classroom_master: location.state.login_id,\n      class_id: class_id\n    };\n    dispatch(createClassroom(class_body)).then(res => {\n      console.log(\"강의실 ->\");\n      console.log(res.payload);\n\n      if (res.payload.createClassroom) {\n        setClass_id(class_body.class_id);\n        console.log(res.payload.message);\n      } else {\n        console.log(res.payload.message);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  let text_data = [{\n    id: 1,\n    label: \"강의실명\",\n    name: \"classroom\",\n    value: ''\n  }];\n\n  if (mode == 'teacher') {\n    startpage = 'student';\n    add_button = [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add_class_box\",\n      children: /*#__PURE__*/_jsxDEV(CoreDialog, {\n        button_box: \"add_class_box\",\n        button_value: \"+\",\n        dialog_title: \"\\uAC15\\uC758\\uC2E4 \\uCD94\\uAC00\\uD558\\uAE30\",\n        text_data: text_data,\n        handleFormSubmit: function (classroom) {\n          insertClassroom(classroom[0].value);\n        }\n      }, \"add\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)\n    }, \"add\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)];\n  } // 툴바 모드 바꿔주기 \n  else if (mode == 'student') {\n    startpage = 'workbook';\n    toolbar[1].title = 'FeedBank';\n    toolbar[0].link = '/student/my';\n    toolbar[1].link = '/student/feedbank';\n  }\n\n  const class_list = classrooms.map((classroom, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"click_box\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"link\",\n      onClick: () => {\n        history.push({\n          pathname: \"../../mainpage/\" + mode + \"/\" + startpage + \"/\" + userId + \"/\" + classroom.class_id + \"/\" + classroom.title,\n          state: {\n            classroom_title: classroom.title,\n            id: location.state.login_id,\n            class_id: classroom.class_id\n          }\n        });\n      },\n      children: classroom.title\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this));\n  console.log('강의실렌더링');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n      data: toolbar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"classroom_box\",\n      children: [/*#__PURE__*/_jsxDEV(Core_Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title_box\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uB098\\uC758 \\uAC15\\uC758\\uC2E4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), class_list, add_button]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ClassRoom, \"qQVYqOEFmGJk6Obnd5sWX7wzJ+s=\", false, function () {\n  return [useLocation, useHistory, useDispatch];\n});\n\n_c = ClassRoom;\n;\nexport default ClassRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClassRoom\");","map":{"version":3,"sources":["/Users/hongseohee/core-client-aws/CORE/core/src/components/ClassRoom.js"],"names":["React","useEffect","useState","Link","Toolbar","CoreDialog","useLocation","useHistory","useDispatch","getUser","addClassroom","createClassroom","ClassRoom","match","toolbar","id","title","link","mode","userId","params","location","history","console","log","startpage","add_button","dialog","dispatch","classrooms","setClassrooms","objectClassroom","class_id","setClass_id","state","login_id","then","res","payload","getSuccess","data","belonged_classes","map","push","insertClassroom","value","Date","now","body","nick","updateSuccess","preClassrooms","alert","message","catch","err","class_body","name","classroom_master","text_data","label","classroom","class_list","index","pathname","classroom_title"],"mappings":"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","sourcesContent":["/*eslint-disable */\nimport React, { useEffect, useState } from 'react';\nimport { ReactComponent as Core_Logo } from '../css/Core.svg';\nimport '../css/ClassRoom.css';\nimport { Link } from 'react-router-dom';\nimport Toolbar from './Toolbar';\nimport CoreDialog from './CoreDialog';\nimport { useLocation, useHistory } from 'react-router-dom';\n\n\n//로그인 성공 후 페이지 -> 서버로부터 강의실리스트를 가져와야함 \nimport { useDispatch } from 'react-redux'\nimport { getUser } from '../_actions/user_action';\nimport { addClassroom, createClassroom } from '../_actions/teacher_action'\n\nfunction ClassRoom({ match }) {\n    let toolbar = [\n        { id: 1, title: 'My', link: '/teacher/my' },\n        { id: 2, title: 'WorkBank', link: '/teacher/workbank' }];\n\n    const { mode, userId } = match.params;\n    const location = useLocation();\n    const history = useHistory();\n    console.log(userId);\n\n    let startpage = null;\n    let add_button = null;\n    let dialog = null;\n    //서버로 부터 강의실 목록 가져오기 \n\n    const dispatch = useDispatch();\n    let [classrooms, setClassrooms] = useState([])\n    let objectClassroom = []\n\n    let [class_id, setClass_id] = useState([]);\n    useEffect(() => {\n\n        //클래스룸 가져오기\n        dispatch(getUser(location.state.login_id))\n            .then(res => {\n                if (res.payload.getSuccess) {\n                    res.payload.data.belonged_classes.map((data) => {\n                        objectClassroom.push({ title: data.title, class_id: data.class_id })\n                    })\n\n                    setClassrooms(objectClassroom)\n                }\n                else {\n                    console.log(res.payload)\n                }\n            })\n    }, [])\n    console.log(classrooms);\n\n    function insertClassroom(value) {\n        let class_id = location.state.login_id + Date.now();\n        let body = {\n            nick: location.state.login_id,\n            belonged_classes: [{ title: value, class_id: class_id }]\n        }\n\n        dispatch(addClassroom(body))\n            .then(res => {\n                console.log(\"업데이트 ->\")\n\n                console.log(res.payload);\n                if (res.payload.updateSuccess) {\n                    setClassrooms(preClassrooms => [...preClassrooms, body.belonged_classes[0]]);\n                }\n                else {\n                    alert(res.payload.message)\n                }\n            }).catch(err => {\n                console.log(err)\n            })\n\n        let class_body = {\n            name: value,\n            classroom_master: location.state.login_id,\n            class_id: class_id\n        }\n\n        dispatch(createClassroom(class_body))\n            .then(res => {\n                console.log(\"강의실 ->\")\n                console.log(res.payload);\n                if (res.payload.createClassroom) {\n                    setClass_id(class_body.class_id);\n                    console.log(res.payload.message);\n                }\n                else {\n                    console.log(res.payload.message)\n                }\n            }).catch((err) => {\n                console.log(err);\n            });\n\n    }\n\n\n\n\n    let text_data = [\n        { id: 1, label: \"강의실명\", name: \"classroom\", value: '' }\n    ]\n\n    if (mode == 'teacher') {\n        startpage = 'student';\n        add_button = [\n            <div className=\"add_class_box\" key=\"add\">\n                <CoreDialog key=\"add\" button_box=\"add_class_box\" button_value=\"+\"\n                    dialog_title=\"강의실 추가하기\" text_data={text_data} handleFormSubmit={function (classroom) {\n                        insertClassroom(classroom[0].value);\n\n                    }} />\n\n            </div>\n\n        ]\n    }\n    // 툴바 모드 바꿔주기 \n    else if (mode == 'student') {\n        startpage = 'workbook';\n        toolbar[1].title = 'FeedBank';\n        toolbar[0].link = '/student/my';\n        toolbar[1].link = '/student/feedbank';\n\n    }\n\n    const class_list = classrooms.map((classroom, index) =>\n        <div className=\"click_box\" key={index}>\n            <span className=\"link\" key={index}\n                onClick={() => {\n                    history.push({\n                        pathname: \"../../mainpage/\" + mode + \"/\" + startpage + \"/\" + userId + \"/\" + classroom.class_id + \"/\" + classroom.title,\n                        state: {\n                            classroom_title: classroom.title,\n                            id: location.state.login_id,\n                            class_id: classroom.class_id\n                        }\n                    })\n                }}\n            >{classroom.title}</span>\n        </div>);\n\n\n    console.log('강의실렌더링');\n\n\n\n    return (\n        <div>\n            <Toolbar data={toolbar} />\n\n            <div className=\"classroom_box\">\n                <Core_Logo />\n                <div className=\"content\">\n\n                    <div className=\"title_box\">\n                        <span>나의 강의실</span>\n                    </div>\n                    {class_list}\n                    {add_button}\n                </div>\n            </div>\n        </div>\n    );\n\n};\n\nexport default ClassRoom;"]},"metadata":{},"sourceType":"module"}