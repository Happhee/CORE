{"ast":null,"code":"var _jsxFileName = \"/Users/hongseohee/core-client-aws/CORE/core/src/components/ProblemGrid.js\",\n    _s = $RefreshSig$();\n\n/*eslint-disable */\nimport React, { useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\nimport '../css/ProblemGrid.css';\nimport * as InputVaildtion from './InputValidation'; //그리드 박스 스타일 속성 적용\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Item = styled(Paper)(({\n  theme\n}) => ({ ...theme.typography.body2,\n  padding: theme.spacing(0),\n  textAlign: 'start',\n  color: theme.palette.text.secondary,\n  margin: theme.spacing(1),\n  boxShadow: 'none'\n})); //텍스트 필드 속성 적용\n\nconst CssTextField = styled(TextField)({\n  '& label.Mui-focused': {\n    color: 'green'\n  },\n  '& .MuiInput-underline:after': {\n    borderBottomColor: 'green'\n  },\n  '& .MuiOutlinedInput-root': {\n    '& fieldset': {\n      borderColor: '#9A30AE'\n    },\n    '&:hover fieldset': {\n      borderColor: 'pink'\n    },\n    '&.Mui-focused fieldset': {\n      borderColor: 'green'\n    }\n  }\n});\n\nfunction ProblemGrid(props) {\n  _s();\n\n  let [grid_data, setGrid_data] = useState(props.grid_data);\n  let sub_list = []; // 입력값, 출력값 초기세팅 \n\n  let input_list = [];\n  let output_list = [];\n  let [input_data, setInput_data] = useState(props.input_data);\n  let [output_data, setOutput_data] = useState(props.output_data); //피드백 세팅\n\n  let feedback_textfield = []; // 텍스트 필드 값 바꾸기 \n\n  const handleGridChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    console.log(value);\n    console.log(name);\n    setGrid_data(InputVaildtion.newTextfieldValue(grid_data, value, name));\n  };\n\n  const handleInputChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setInput_data(InputVaildtion.newTextfieldValue(input_data, value, name));\n  };\n\n  const handleOutputChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setOutput_data(InputVaildtion.newTextfieldValue(output_data, value, name));\n  }; //등록 수정\n\n\n  if (grid_data[0].value === \"register_modify\") {\n    for (let index = 3; index < 6; index++) {\n      sub_list.push( /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"grid_data_title\",\n            children: grid_data[index].title\n          }, grid_data[index].title, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CssTextField, {\n            fullWidth: true,\n            label: grid_data[index].input,\n            variant: \"outlined\",\n            id: \"custom-css-outlined-input\",\n            multiline: true,\n            rows: 10,\n            name: grid_data[index].title,\n            value: grid_data[index].value,\n            onChange: handleGridChange\n          }, grid_data[index].input, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, grid_data[index].id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this));\n    }\n\n    input_data.map((input, index) => {\n      input_list.push( /*#__PURE__*/_jsxDEV(Item, {\n        children: /*#__PURE__*/_jsxDEV(CssTextField, {\n          fullWidth: true,\n          label: input.input,\n          variant: \"outlined\",\n          id: \"custom-css-outlined-input\",\n          maxRows: 1,\n          name: input.id,\n          value: input.value,\n          onChange: handleInputChange\n        }, input.input, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this));\n    });\n    output_data.map((output, index) => {\n      output_list.push( /*#__PURE__*/_jsxDEV(Item, {\n        children: /*#__PURE__*/_jsxDEV(CssTextField, {\n          fullWidth: true,\n          label: output.input,\n          variant: \"outlined\",\n          id: \"custom-css-outlined-input\",\n          maxRows: 1,\n          name: output.id,\n          value: output.value,\n          onChange: handleOutputChange\n        }, output.input, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this));\n    });\n  } //선생님 피드백 \n  else if (grid_data[0].value === 'teacher - feedBack') {\n    input_data.map((input, index) => {\n      input_list.push( /*#__PURE__*/_jsxDEV(Item, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"grid_data\",\n          children: input.input\n        }, input.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this));\n    });\n    output_data.map((output, index) => {\n      output_list.push( /*#__PURE__*/_jsxDEV(Item, {\n        children: /*#__PURE__*/_jsxDEV(CssTextField, {\n          fullWidth: true,\n          label: output.input,\n          variant: \"outlined\",\n          id: \"custom-css-outlined-input\",\n          maxRows: 1,\n          name: output.id,\n          value: output.value,\n          onChange: handleOutputChange\n        }, output.input, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this));\n    });\n\n    for (let index = 3; index < 8; index++) {\n      let xs = 6;\n      if (index == 3 || index == 4 || index == 7) xs = 12;\n      sub_list.push( /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: xs,\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"grid_data_title\",\n            children: grid_data[index].title\n          }, grid_data[index].input, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"grid_data\",\n            children: grid_data[index].value\n          }, grid_data[index].value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)]\n        }, grid_data[index].title, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)\n      }, grid_data[index].id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this));\n    }\n\n    feedback_textfield.push( /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Item, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"grid_data_title\",\n          children: grid_data[8].title\n        }, grid_data[8].title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CssTextField, {\n          fullWidth: true,\n          label: grid_data[8].input,\n          variant: \"outlined\",\n          id: \"custom-css-outlined-input\",\n          multiline: true,\n          rows: 5,\n          name: grid_data[8].title,\n          value: grid_data[8].value,\n          onChange: handleGridChange\n        }, grid_data[8].input, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)]\n      }, grid_data[0].id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)\n    }, grid_data[0].value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    noValidate: true,\n    autoComplete: \"off\",\n    sx: {\n      flexGrow: 1\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 2,\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"grid_data_title\",\n            children: grid_data[1].title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"grid_data\",\n            children: [props.mainunit, \"\\uB2E8\\uC6D0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 2,\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"grid_data_title\",\n            children: grid_data[2].title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"grid_data\",\n            children: [props.subunit, \"\\uBC88\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      columns: 12,\n      children: [sub_list, /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(Item, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"grid_data_title\",\n            children: input_data[0].title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), input_list]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(Item, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"grid_data_title\",\n            children: output_data[0].title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), output_list]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), feedback_textfield]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProblemGrid, \"F/KXmPjA2rcrTSy6slLDsgOxaUI=\");\n\n_c = ProblemGrid;\nexport default ProblemGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProblemGrid\");","map":{"version":3,"sources":["/Users/hongseohee/core-client-aws/CORE/core/src/components/ProblemGrid.js"],"names":["React","useState","styled","Box","Paper","Grid","TextField","InputVaildtion","Item","theme","typography","body2","padding","spacing","textAlign","color","palette","text","secondary","margin","boxShadow","CssTextField","borderBottomColor","borderColor","ProblemGrid","props","grid_data","setGrid_data","sub_list","input_list","output_list","input_data","setInput_data","output_data","setOutput_data","feedback_textfield","handleGridChange","event","value","name","target","console","log","newTextfieldValue","handleInputChange","handleOutputChange","index","push","title","input","id","map","output","xs","flexGrow","mainunit","subunit"],"mappings":"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","sourcesContent":["/*eslint-disable */\n\nimport React, { useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\nimport '../css/ProblemGrid.css';\n\nimport * as InputVaildtion from './InputValidation'\n//그리드 박스 스타일 속성 적용\nconst Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(0),\n    textAlign: 'start',\n    color: theme.palette.text.secondary,\n    margin: theme.spacing(1),\n    boxShadow: 'none'\n}));\n\n//텍스트 필드 속성 적용\nconst CssTextField = styled(TextField)({\n\n    '& label.Mui-focused': {\n        color: 'green',\n    },\n    '& .MuiInput-underline:after': {\n        borderBottomColor: 'green',\n    },\n    '& .MuiOutlinedInput-root': {\n        '& fieldset': {\n            borderColor: '#9A30AE',\n        },\n        '&:hover fieldset': {\n            borderColor: 'pink',\n        },\n        '&.Mui-focused fieldset': {\n            borderColor: 'green',\n        },\n    },\n});\n\n\nfunction ProblemGrid(props) {\n    let [grid_data, setGrid_data] = useState(props.grid_data);\n    let sub_list = [];\n    // 입력값, 출력값 초기세팅 \n    let input_list = [];\n    let output_list = [];\n    let [input_data, setInput_data] = useState(props.input_data)\n    let [output_data, setOutput_data] = useState(props.output_data)\n    //피드백 세팅\n    let feedback_textfield = [];\n\n    // 텍스트 필드 값 바꾸기 \n    const handleGridChange = (event) => {\n        const { value, name } = event.target;\n        console.log(value);\n        console.log(name);\n        setGrid_data(InputVaildtion.newTextfieldValue(grid_data, value, name));\n    }\n    const handleInputChange = (event) => {\n        const { value, name } = event.target;\n        setInput_data(InputVaildtion.newTextfieldValue(input_data, value, name));\n    }\n    const handleOutputChange = (event) => {\n        const { value, name } = event.target;\n        setOutput_data(InputVaildtion.newTextfieldValue(output_data, value, name));\n    }\n    //등록 수정\n    if (grid_data[0].value === \"register_modify\") {\n        for (let index = 3; index < 6; index++) {\n            sub_list.push(\n                <Grid key={index} item xs={12}>\n                    <Item key={grid_data[index].id}>\n                        <p key={grid_data[index].title} className=\"grid_data_title\">{grid_data[index].title}</p>\n                        <CssTextField key={grid_data[index].input} fullWidth label={grid_data[index].input} variant=\"outlined\" id=\"custom-css-outlined-input\" multiline rows={10}\n                            name={grid_data[index].title} value={grid_data[index].value} onChange={handleGridChange} />\n                    </Item>\n                </Grid>\n            )\n        }\n\n        input_data.map((input, index) => {\n            input_list.push(\n                <Item key={index}>\n                    <CssTextField key={input.input} fullWidth label={input.input} variant=\"outlined\" id=\"custom-css-outlined-input\" maxRows={1}\n                        name={input.id} value={input.value} onChange={handleInputChange} />\n                </Item>\n            )\n        })\n        output_data.map((output, index) => {\n            output_list.push(\n                <Item key={index}>\n                    <CssTextField key={output.input} fullWidth label={output.input} variant=\"outlined\" id=\"custom-css-outlined-input\" maxRows={1}\n                        name={output.id} value={output.value} onChange={handleOutputChange} />\n                </Item>\n            )\n        })\n    }\n    //선생님 피드백 \n    else if (grid_data[0].value === 'teacher - feedBack') {\n        input_data.map((input, index) => {\n            input_list.push(\n                <Item key={index}>\n                    <p key={input.title} className=\"grid_data\">{input.input}</p>\n                </Item>\n            )\n        })\n        output_data.map((output, index) => {\n            output_list.push(\n                <Item key={index}>\n                    <CssTextField key={output.input} fullWidth label={output.input} variant=\"outlined\" id=\"custom-css-outlined-input\" maxRows={1}\n                        name={output.id} value={output.value} onChange={handleOutputChange} />\n                </Item>\n            )\n        })\n\n        for (let index = 3; index < 8; index++) {\n            let xs = 6;\n\n\n            if (index == 3 || index == 4 || index == 7)\n                xs = 12;\n            sub_list.push(\n                <Grid key={grid_data[index].id} item xs={xs} >\n                    <Item key={grid_data[index].title}>\n                        <p key={grid_data[index].input} className=\"grid_data_title\">{grid_data[index].title}</p>\n                        <p key={grid_data[index].value} className=\"grid_data\">{grid_data[index].value}</p>\n                    </Item>\n                </Grid>)\n        }\n        feedback_textfield.push(\n            <Grid key={grid_data[0].value} item xs={12}>\n                <Item key={grid_data[0].id}>\n                    <p key={grid_data[8].title} className=\"grid_data_title\">{grid_data[8].title}</p>\n                    <CssTextField key={grid_data[8].input} fullWidth label={grid_data[8].input} variant=\"outlined\" id=\"custom-css-outlined-input\" multiline rows={5}\n                        name={grid_data[8].title} value={grid_data[8].value} onChange={handleGridChange} />\n                </Item>\n\n            </Grid>\n        )\n    }\n\n\n    return (\n        <Box component=\"form\"\n            noValidate\n            autoComplete=\"off\" sx={{ flexGrow: 1 }}>\n            <Grid container spacing={2}>\n\n                {/* 상단 문제 챕터 및 단원 */}\n                <Grid item xs={2}>\n                    <Item>\n                        <p className=\"grid_data_title\">{grid_data[1].title}</p>\n                        <p className=\"grid_data\">{props.mainunit}단원</p>\n                    </Item>\n                </Grid>\n                <Grid item xs={2}>\n                    <Item>\n                        <p className=\"grid_data_title\">{grid_data[2].title}</p>\n                        <p className=\"grid_data\">{props.subunit}번</p>\n                    </Item>\n                </Grid>\n            </Grid>\n\n            <Grid container spacing={2} columns={12}>\n                {/* 여기까지 등록, 수정, 피드백 그리드 동일 !!! */}\n\n                {sub_list}\n                <Grid item xs={6} md={6}>\n                    <Item>\n                        <p className=\"grid_data_title\">{input_data[0].title}</p>\n                    </Item>\n                    {input_list}\n                </Grid>\n                <Grid item xs={6} md={6}>\n                    <Item>\n                        <p className=\"grid_data_title\">{output_data[0].title}</p>\n                    </Item>\n                    {output_list}\n                </Grid>\n                {feedback_textfield}\n            </Grid>\n\n        </Box>\n\n\n    )\n}\n\nexport default ProblemGrid;"]},"metadata":{},"sourceType":"module"}