{"ast":null,"code":"import _toConsumableArray from\"/Users/hongseohee/core-client-aws/CORE/core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";/*eslint-disable */export function checkTextfieldValue(textfield_data){for(var index=0;index<textfield_data.length;index++){if(textfield_data[index].value===\"\")return false;}return true;}export function checkBoxChecked(checkbox_data){var chek=false;checkbox_data.map(function(data){console.log(data.checked);if(data.checked===true)chek=true;});return chek;}export function newTextfieldValue(textfield_data,value,name){var newTextfield_data=_toConsumableArray(textfield_data);textfield_data.map(function(data,index){if(data.id===name||data.title===name)newTextfield_data[index].value=value;});return newTextfield_data;}export function isRegex(textfield_data,helperText_data){var idRegex=/^[A-za-z0-9]{8,12}$/;var pwRegex=/^(?=.*\\d)(?=.*[a-zA-Z])[0-9a-zA-Z]{10,16}$/;var nameRegx=/^[가-힣]{2,4}$/;var phoneRegex=/^\\d{2,3}-\\d{3,4}-\\d{4}$/;var affiliationRegex=/^[가-힣a-zA-Z]+$/;var newHelperText_data=_toConsumableArray(helperText_data);textfield_data.map(function(data){if(data.title==='ID'){console.log(idRegex.test(data.value));if(idRegex.test(data.value)){newHelperText_data[0]=\"❤️CORE❤️\";}else{newHelperText_data[0]=\"영문자,숫자 8-12자리\";}}if(data.title==='PW'){if(pwRegex.test(data.value)){newHelperText_data[1]=\"❤️CORE❤️\";}else{newHelperText_data[1]=\"영문자 & 숫자 10-16자리\";}}if(data.title==='이름'){if(nameRegx.test(data.value)){newHelperText_data[2]=\"❤️CORE❤️\";}else{newHelperText_data[2]=\"한글 2-4자\";}}if(data.title==='전화번호'){if(phoneRegex.test(data.value)){newHelperText_data[3]=\"❤️CORE❤️\";}else{newHelperText_data[3]=\"0xx-xxxx-xxxx\";}}if(data.title==='소속'){if(affiliationRegex.test(data.value)){newHelperText_data[4]=\"❤️CORE❤️\";}else{newHelperText_data[4]=\"한글,영어로만\";}}});return newHelperText_data;}","map":{"version":3,"sources":["/Users/hongseohee/core-client-aws/CORE/core/src/components/InputValidation.js"],"names":["checkTextfieldValue","textfield_data","index","length","value","checkBoxChecked","checkbox_data","chek","map","data","console","log","checked","newTextfieldValue","name","newTextfield_data","id","title","isRegex","helperText_data","idRegex","pwRegex","nameRegx","phoneRegex","affiliationRegex","newHelperText_data","test"],"mappings":"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","sourcesContent":["/*eslint-disable */\n\nexport function checkTextfieldValue(textfield_data) {\n\n    for (let index = 0; index < textfield_data.length; index++) {\n        if (textfield_data[index].value === \"\")\n            return false;\n    }\n    return true;\n\n}\nexport function checkBoxChecked(checkbox_data) {\n    let chek = false\n    checkbox_data.map((data) => {\n        console.log(data.checked)\n        if (data.checked === true)\n            chek = true;\n    })\n    return chek;\n}\n\nexport function newTextfieldValue(textfield_data, value, name) {\n    const newTextfield_data = [...textfield_data];\n    textfield_data.map((data, index) => {\n        if (data.id === name || data.title === name)\n            newTextfield_data[index].value = value;\n\n    })\n    return newTextfield_data;\n}\n\nexport function isRegex(textfield_data, helperText_data) {\n    const idRegex = /^[A-za-z0-9]{8,12}$/;\n    const pwRegex = /^(?=.*\\d)(?=.*[a-zA-Z])[0-9a-zA-Z]{10,16}$/;\n    const nameRegx = /^[가-힣]{2,4}$/\n    const phoneRegex = /^\\d{2,3}-\\d{3,4}-\\d{4}$/;\n    const affiliationRegex = /^[가-힣a-zA-Z]+$/;\n\n    const newHelperText_data = [...helperText_data];\n\n    textfield_data.map((data) => {\n        if (data.title === 'ID') {\n            console.log(idRegex.test(data.value))\n\n            if (idRegex.test(data.value)) {\n                newHelperText_data[0] = \"❤️CORE❤️\";\n            } else {\n                newHelperText_data[0] = \"영문자,숫자 8-12자리\"\n            }\n        }\n\n        if (data.title === 'PW') {\n            if (pwRegex.test(data.value)) {\n                newHelperText_data[1] = \"❤️CORE❤️\";\n            } else {\n                newHelperText_data[1] = \"영문자 & 숫자 10-16자리\"\n            }\n        }\n        if (data.title === '이름') {\n            if (nameRegx.test(data.value)) {\n                newHelperText_data[2] = \"❤️CORE❤️\";\n            } else {\n                newHelperText_data[2] = \"한글 2-4자\"\n            }\n        }\n        if (data.title === '전화번호') {\n            if (phoneRegex.test(data.value)) {\n                newHelperText_data[3] = \"❤️CORE❤️\";\n            } else {\n                newHelperText_data[3] = \"0xx-xxxx-xxxx\"\n            }\n        }\n        if (data.title === '소속') {\n            if (affiliationRegex.test(data.value)) {\n                newHelperText_data[4] = \"❤️CORE❤️\";\n            } else {\n                newHelperText_data[4] = \"한글,영어로만\"\n            }\n        }\n    })\n\n\n    return newHelperText_data;\n\n\n}\n\n"]},"metadata":{},"sourceType":"module"}