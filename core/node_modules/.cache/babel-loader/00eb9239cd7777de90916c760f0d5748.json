{"ast":null,"code":"var _jsxFileName = \"/Users/hongseohee/core-client-aws/CORE/core/src/teacher/components/QuizList.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\n/*eslint-disable */\nimport React, { useState } from 'react';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { Button, styled } from '@mui/material';\nimport queryString from 'query-string';\nimport * as ProblemServer from '../server/ProblemServer';\nimport DeleteQuiz from './DeleteQuiz';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withRouter } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddQuiz = styled(Button)({\n  marginLeft: '93.8%',\n  marginTop: '1%',\n  padding: '0.8%',\n  textAlign: 'center',\n  backgroundColor: '#692498',\n  borderRadius: '10px',\n  color: '#fff',\n  fontFamily: 'esamanruLight',\n  fontWeight: 'normal',\n  '&:hover': {\n    background: \"#E0BFE6\",\n    color: \"#8154A0\"\n  }\n});\nconst EditBtn = styled(Button)({\n  marginLeft: '0px',\n  textAlign: 'center',\n  backgroundColor: '#E0BFE6',\n  borderRadius: '30px',\n  color: '#8154A0',\n  fontWeight: 'bold',\n  '&:hover': {\n    background: \"#8154A0\",\n    color: \"#FFF\"\n  }\n});\n\nfunction QuizList({\n  match\n}) {\n  _s();\n\n  const {\n    userId,\n    classId,\n    title\n  } = match.params;\n  let [boards, setBoards] = useState([{\n    brdno: 1,\n    brdtitle: '별탑 쌓기',\n    brdwriter: '80'\n  }, {\n    brdno: 2,\n    brdtitle: '1부터 100더하기',\n    brdwriter: '30'\n  }, {\n    brdno: 3,\n    brdtitle: '모래시계 만들기',\n    brdwriter: '20'\n  }]); // handleSaveData = (data) => {\n  //     let boards = this.state.boards;\n  //     if (data.brdno === null || data.brdno === '' || data.brdno === undefined) {    // new : Insert\n  //         this.setState({\n  //             maxNo: this.state.maxNo + 1,\n  //             boards: boards.concat({ brdno: this.state.maxNo, brdwriter: data.brdwriter, brdtitle: data.brdtitle })\n  //         });\n  //     } else {                                                        // Update\n  //         this.setState({\n  //             boards: boards.map(row => data.brdno === row.brdno ? { ...data } : row)\n  //         })\n  //     }\n  // }\n  // handleSelectRow = (row) => {\n  //     this.child.current.handleSelectRow(row);\n  // }\n  // render() {\n\n  console.log('퀴즈렌더링');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main_div\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        width: '85%',\n        margin: '20px auto',\n        marginTop: '0px'\n      },\n      children: \"WorkBook - QuizList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '85%',\n        margin: '20px auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              fontFamily: 'esamanru',\n              fontWeight: 'bold',\n              height: '50px'\n            },\n            align: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              width: \"50\",\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              width: \"400\",\n              children: \"\\uBB38\\uC81C\\uBA85\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              width: \"60\",\n              children: \"\\uC815\\uB2F5\\uB960\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              width: \"80\",\n              children: \"\\uD3B8\\uC9D1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), boards.map(row => /*#__PURE__*/_jsxDEV(BoardItem, {\n            row: row,\n            userId: userId,\n            classId: classId,\n            title: title,\n            mainunit: \"1\"\n          }, row.brdno, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 30\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProblemAdd_Button, {\n        mainunit: \"1\",\n        subunit: boards.length + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n\n_s(QuizList, \"V6IHdoLWtM58h5z95TJJtD3OtcM=\");\n\n_c = QuizList;\nexport default _c2 = withRouter(QuizList);\n\nfunction BoardItem(props) {\n  _s2();\n\n  let history = useHistory();\n  let {\n    search\n  } = useLocation();\n  const queryObj = queryString.parse(search);\n  const {\n    mainunit\n  } = queryObj;\n  console.log(props.userId);\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    align: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.row.brdno\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.row.brdtitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.row.brdwriter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [/*#__PURE__*/_jsxDEV(EditBtn, {\n        style: {\n          marginLeft: \"10%\",\n          marginRight: \"0%\",\n          float: \"left\"\n        },\n        onClick: () => {\n          history.push({\n            pathname: \"/mainpage/teacher/workbook/\" + props.userId + \"/\" + props.classId + \"/\" + props.title + \"/\" + \"quizlist/problemmain?mainunit=\" + mainunit + \"&subunit=\" + props.subunit,\n            state: {\n              problem_bottom_title: \"수정하기\",\n              grid_data: ProblemServer.getGrid_data(\"modify\"),\n              input_data: ProblemServer.getInput_data(\"modify\"),\n              output_data: ProblemServer.getOutput_data(\"modify\")\n            }\n          });\n        },\n        children: \"\\uC218\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DeleteQuiz, {\n        style: {\n          marginLeft: \"0%\",\n          marginRight: \"10%\",\n          float: \"right\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(BoardItem, \"sYqFdWHCkJQvcWymAKHy2IBmgbA=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c3 = BoardItem;\n\nfunction ProblemAdd_Button(props) {\n  _s3();\n\n  let history = useHistory();\n  let {\n    search\n  } = useLocation();\n  const queryObj = queryString.parse(search);\n  const {\n    mainunit\n  } = queryObj;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AddQuiz, {\n      onClick: () => {\n        history.push({\n          pathname: \"/mainpage/teacher/workbook/\" + props.userId + \"/\" + props.classId + \"/\" + props.title + \"/\" + \"quizlist/problemmain?mainunit=\" + mainunit + \"&subunit=\" + props.subunit,\n          state: {\n            problem_bottom_title: \"문제등록\",\n            grid_data: ProblemServer.getGrid_data(\"register\"),\n            input_data: ProblemServer.getInput_data(\"register\"),\n            output_data: ProblemServer.getOutput_data(\"register\")\n          }\n        });\n      },\n      children: \"\\uBB38\\uC81C\\uB4F1\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 9\n  }, this);\n}\n\n_s3(ProblemAdd_Button, \"sYqFdWHCkJQvcWymAKHy2IBmgbA=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c4 = ProblemAdd_Button;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"QuizList\");\n$RefreshReg$(_c2, \"%default%\");\n$RefreshReg$(_c3, \"BoardItem\");\n$RefreshReg$(_c4, \"ProblemAdd_Button\");","map":{"version":3,"sources":["/Users/hongseohee/core-client-aws/CORE/core/src/teacher/components/QuizList.js"],"names":["React","useState","Link","useHistory","useLocation","Button","styled","queryString","ProblemServer","DeleteQuiz","makeStyles","withRouter","AddQuiz","marginLeft","marginTop","padding","textAlign","backgroundColor","borderRadius","color","fontFamily","fontWeight","background","EditBtn","QuizList","match","userId","classId","title","params","boards","setBoards","brdno","brdtitle","brdwriter","console","log","width","margin","height","map","row","length","BoardItem","props","history","search","queryObj","parse","mainunit","marginRight","float","push","pathname","subunit","state","problem_bottom_title","grid_data","getGrid_data","input_data","getInput_data","output_data","getOutput_data","ProblemAdd_Button"],"mappings":"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","sourcesContent":["/*eslint-disable */\n\nimport React, { useState } from 'react';\n\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { Button, styled } from '@mui/material';\nimport queryString from 'query-string'\nimport * as ProblemServer from '../server/ProblemServer'\nimport DeleteQuiz from './DeleteQuiz';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { withRouter } from \"react-router\";\n\n\nconst AddQuiz = styled(Button)({\n    marginLeft: '93.8%',\n    marginTop: '1%',\n    padding: '0.8%',\n    textAlign: 'center',\n    backgroundColor: '#692498',\n    borderRadius: '10px',\n    color: '#fff',\n    fontFamily: 'esamanruLight',\n    fontWeight: 'normal',\n    '&:hover': {\n        background: \"#E0BFE6\",\n        color: \"#8154A0\"\n    }\n});\n\nconst EditBtn = styled(Button)({\n    marginLeft: '0px',\n    textAlign: 'center',\n    backgroundColor: '#E0BFE6',\n    borderRadius: '30px',\n    color: '#8154A0',\n    fontWeight: 'bold',\n    '&:hover': {\n        background: \"#8154A0\",\n        color: \"#FFF\"\n    }\n});\n\nfunction QuizList({ match }) {\n\n    const { userId, classId, title } = match.params;\n\n    let [boards, setBoards] = useState([{\n        brdno: 1,\n        brdtitle: '별탑 쌓기',\n        brdwriter: '80'\n    },\n    {\n        brdno: 2,\n        brdtitle: '1부터 100더하기',\n        brdwriter: '30'\n    },\n    {\n        brdno: 3,\n        brdtitle: '모래시계 만들기',\n        brdwriter: '20'\n    }])\n\n\n    // handleSaveData = (data) => {\n    //     let boards = this.state.boards;\n    //     if (data.brdno === null || data.brdno === '' || data.brdno === undefined) {    // new : Insert\n    //         this.setState({\n    //             maxNo: this.state.maxNo + 1,\n    //             boards: boards.concat({ brdno: this.state.maxNo, brdwriter: data.brdwriter, brdtitle: data.brdtitle })\n    //         });\n    //     } else {                                                        // Update\n    //         this.setState({\n    //             boards: boards.map(row => data.brdno === row.brdno ? { ...data } : row)\n    //         })\n    //     }\n    // }\n    // handleSelectRow = (row) => {\n    //     this.child.current.handleSelectRow(row);\n    // }\n\n    // render() {\n\n    console.log('퀴즈렌더링');\n\n    return (\n        <div className=\"main_div\">\n            <h2 style={{ width: '85%', margin: '20px auto', marginTop: '0px' }}>WorkBook - QuizList</h2>\n            <div style={{ width: '85%', margin: '20px auto' }}>\n                <table border=\"1\" >\n                    <tbody>\n                        <tr style={{ fontFamily: 'esamanru', fontWeight: 'bold', height: '50px' }} align=\"center\" >\n                            <td width=\"50\">No</td>\n                            <td width=\"400\">문제명</td>\n                            <td width=\"60\">정답률</td>\n                            <td width=\"80\">편집</td>\n                        </tr>\n                        {\n                            boards.map(row =>\n                            (<BoardItem key={row.brdno} row={row} userId={userId} classId={classId} title={title}\n                                mainunit=\"1\" />)\n                            )\n                        }\n                    </tbody>\n                </table>\n                <ProblemAdd_Button mainunit=\"1\" subunit={boards.length + 1} />\n            </div>\n        </div>\n    );\n\n}\nexport default withRouter(QuizList);\n\nfunction BoardItem(props) {\n    let history = useHistory();\n    let { search } = useLocation();\n\n    const queryObj = queryString.parse(search);\n    const { mainunit } = queryObj;\n\n    console.log(props.userId)\n\n    return (\n        <tr align=\"center\">\n            <td>{props.row.brdno}</td>\n            <td>{props.row.brdtitle}</td>\n            <td>{props.row.brdwriter}</td>\n            <td>\n                <EditBtn style={{ marginLeft: \"10%\", marginRight: \"0%\", float: \"left\" }} onClick={\n                    () => {\n                        history.push({\n                            pathname: \"/mainpage/teacher/workbook/\"\n                                + props.userId + \"/\"\n                                + props.classId + \"/\"\n                                + props.title + \"/\"\n                                + \"quizlist/problemmain?mainunit=\" + mainunit + \"&subunit=\" + props.subunit,\n                            state: {\n                                problem_bottom_title: \"수정하기\",\n                                grid_data: ProblemServer.getGrid_data(\"modify\"),\n                                input_data: ProblemServer.getInput_data(\"modify\"),\n                                output_data: ProblemServer.getOutput_data(\"modify\")\n                            }\n                        })\n                    }}>수정</EditBtn>\n                <DeleteQuiz style={{ marginLeft: \"0%\", marginRight: \"10%\", float: \"right\" }} />\n            </td>\n        </tr>\n    );\n\n}\n\nfunction ProblemAdd_Button(props) {\n    let history = useHistory();\n    let { search } = useLocation();\n    const queryObj = queryString.parse(search);\n    const { mainunit } = queryObj;\n\n\n    return (\n        <div>\n            <AddQuiz\n                onClick={() => {\n                    history.push({\n                        pathname: \"/mainpage/teacher/workbook/\"\n                            + props.userId + \"/\"\n                            + props.classId + \"/\"\n                            + props.title + \"/\"\n                            + \"quizlist/problemmain?mainunit=\" + mainunit + \"&subunit=\" + props.subunit,\n                        state: {\n                            problem_bottom_title: \"문제등록\",\n                            grid_data: ProblemServer.getGrid_data(\"register\"),\n                            input_data: ProblemServer.getInput_data(\"register\"),\n                            output_data: ProblemServer.getOutput_data(\"register\")\n                        }\n                    })\n                }}>문제등록</AddQuiz>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}