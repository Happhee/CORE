{"ast":null,"code":"var _jsxFileName = \"/Users/hongseohee/core-client-aws/CORE/core/src/teacher/components/FeedBackInfo.js\",\n    _s = $RefreshSig$();\n\n/*eslint-disable */\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport * as ProblemServer from '../server/ProblemServer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FeedBackInfo(props) {\n  _s();\n\n  let history = useHistory();\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    align: \"center\",\n    style: {\n      height: '60px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.no\n    }, \"no\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.id\n    }, \"id\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.name\n    }, \"name\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.unit\n    }, \"unit\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.quizNumber\n    }, \"quizNumber\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      style: {\n        paddingLeft: \"4%\",\n        paddingRight: \"4%\",\n        color: \"white\"\n      },\n      children: (() => {\n        if (props.set == \"답변완료\") {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              border: \"12px solid #9A30AE\",\n              borderColor: \"#9A30AE\",\n              backgroundColor: \"#9A30AE\",\n              borderRadius: \"20px\",\n              cursor: \"pointer\"\n            },\n            onClick: () => {\n              history.push({\n                pathname: \"/mainpage/teacher/workbook/quizlist/problemmain?mainunit=\" + props.unit + \"&subunit=\" + props.quizNumber,\n                state: {\n                  problem_bottom_title: \"답변하기\",\n                  grid_data: ProblemServer.getGrid_data(\"feedback\"),\n                  input_data: ProblemServer.getInput_data(\"feedback\"),\n                  output_data: ProblemServer.getOutput_data(\"feedback\")\n                }\n              });\n            },\n            children: props.set\n          }, \"set\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 36\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              border: \"12px solid grey\",\n              borderColor: \"grey\",\n              backgroundColor: \"grey\",\n              borderRadius: \"20px\",\n              cursor: \"pointer\"\n            },\n            onClick: () => {\n              history.push({\n                pathname: \"/mainpage/teacher/workbook/quizlist/problemmain?mainunit=\" + props.unit + \"&subunit=\" + props.quizNumber,\n                state: {\n                  problem_bottom_title: \"답변하기\",\n                  grid_data: ProblemServer.getGrid_data(\"feedback\"),\n                  input_data: ProblemServer.getInput_data(\"feedback\"),\n                  output_data: ProblemServer.getOutput_data(\"feedback\")\n                }\n              });\n            },\n            children: props.set\n          }, \"set\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 36\n          }, this);\n        }\n      })()\n    }, \"set\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        marginleft: \"300px\",\n        style: {\n          backgroundColor: \"white\",\n          border: \"0\",\n          fontFamily: 'esamanru',\n          fontWeight: 'normal',\n          height: '50px',\n          textDecorationLine: 'none'\n        },\n        children: props.score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, \"score\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FeedBackInfo, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = FeedBackInfo;\nexport default FeedBackInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedBackInfo\");","map":{"version":3,"sources":["/Users/hongseohee/core-client-aws/CORE/core/src/teacher/components/FeedBackInfo.js"],"names":["React","useHistory","Button","ProblemServer","FeedBackInfo","props","history","height","no","id","name","unit","quizNumber","paddingLeft","paddingRight","color","set","border","borderColor","backgroundColor","borderRadius","cursor","push","pathname","state","problem_bottom_title","grid_data","getGrid_data","input_data","getInput_data","output_data","getOutput_data","fontFamily","fontWeight","textDecorationLine","score"],"mappings":"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","sourcesContent":["/*eslint-disable */\n\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Button from '@mui/material/Button'\nimport * as ProblemServer from '../server/ProblemServer'\n\n\nfunction FeedBackInfo(props) {\n    let history = useHistory();\n    return (\n        <tr align=\"center\" style={{ height: '60px' }}>\n            <td key=\"no\">{props.no}</td>\n            <td key=\"id\">{props.id}</td>\n            <td key=\"name\">{props.name}</td>\n            <td key=\"unit\">{props.unit}</td>\n            <td key=\"quizNumber\">{props.quizNumber}</td>\n            <td key=\"set\" style={{ paddingLeft: \"4%\", paddingRight: \"4%\", color: \"white\" }}>\n                {\n                    (() => {\n                        if (props.set == \"답변완료\") {\n                            return <div key=\"set\" style={{ border: \"12px solid #9A30AE\", borderColor: \"#9A30AE\", backgroundColor: \"#9A30AE\", borderRadius: \"20px\" ,cursor:\"pointer\"}}\n                            onClick={() => {\n                                history.push({\n                                    pathname: \"/mainpage/teacher/workbook/quizlist/problemmain?mainunit=\" + props.unit + \"&subunit=\" + props.quizNumber,\n                                    state: {\n                                        problem_bottom_title: \"답변하기\",\n                                        grid_data: ProblemServer.getGrid_data(\"feedback\"),\n                                        input_data: ProblemServer.getInput_data(\"feedback\"),\n                                        output_data: ProblemServer.getOutput_data(\"feedback\")\n                                    }\n                                })\n                            }}>\n                                {props.set}\n                            </div>;\n                        }\n                        else {\n                            return <div key=\"set\" style={{ border: \"12px solid grey\", borderColor: \"grey\", backgroundColor: \"grey\", borderRadius: \"20px\" ,cursor:\"pointer\"}}\n                            onClick={() => {\n                                history.push({\n                                    pathname: \"/mainpage/teacher/workbook/quizlist/problemmain?mainunit=\" + props.unit + \"&subunit=\" + props.quizNumber,\n                                    state: {\n                                        problem_bottom_title: \"답변하기\",\n                                        grid_data: ProblemServer.getGrid_data(\"feedback\"),\n                                        input_data: ProblemServer.getInput_data(\"feedback\"),\n                                        output_data: ProblemServer.getOutput_data(\"feedback\")\n                                    }\n                                })\n                            }}>\n                                {props.set}\n                            </div>;\n                        }\n                    }\n                    )()\n                }\n            </td>\n            <td key=\"score\">\n                <button marginleft=\"300px\" style={{ backgroundColor: \"white\", border: \"0\", fontFamily: 'esamanru', fontWeight: 'normal', height: '50px', textDecorationLine: 'none' }}\n                    >{props.score}</button>\n            </td>\n        </tr>\n    )\n}\nexport default FeedBackInfo;\n\n\n"]},"metadata":{},"sourceType":"module"}