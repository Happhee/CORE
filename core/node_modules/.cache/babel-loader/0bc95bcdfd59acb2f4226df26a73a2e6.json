{"ast":null,"code":"var _jsxFileName = \"/Users/hongseohee/core-client-aws/CORE/core/src/teacher/components/FeedBackInfo.js\",\n    _s = $RefreshSig$();\n\n/*eslint-disable */\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport * as ProblemServer from '../server/ProblemServer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FeedBackInfo({\n  match,\n  props\n}) {\n  _s();\n\n  let history = useHistory();\n  const {\n    userId,\n    classId,\n    title\n  } = match.params;\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    align: \"center\",\n    style: {\n      height: '60px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.no\n    }, \"no\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.id\n    }, \"id\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.name\n    }, \"name\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.unit\n    }, \"unit\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.quizNumber\n    }, \"quizNumber\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      style: {\n        paddingLeft: \"4%\",\n        paddingRight: \"4%\",\n        color: \"white\"\n      },\n      children: (() => {\n        if (props.set == \"답변완료\") {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              border: \"12px solid #9A30AE\",\n              borderColor: \"#9A30AE\",\n              backgroundColor: \"#9A30AE\",\n              borderRadius: \"20px\"\n            },\n            children: props.set\n          }, \"set\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 36\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              border: \"12px solid grey\",\n              borderColor: \"grey\",\n              backgroundColor: \"grey\",\n              borderRadius: \"20px\"\n            },\n            children: props.set\n          }, \"set\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 36\n          }, this);\n        }\n      })()\n    }, \"set\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        marginleft: \"300px\",\n        style: {\n          backgroundColor: \"white\",\n          border: \"0\",\n          fontFamily: 'esamanru',\n          fontWeight: 'normal',\n          height: '50px',\n          cursor: \"pointer\",\n          textDecorationLine: 'underline'\n        },\n        onClick: () => {\n          history.push({\n            pathname: \"/mainpage/teacher/workbook/\" + props.userId + \"/\" + props.classId + \"/\" + props.title + \"/\" + \"quizlist/problemmain\",\n            state: {\n              problem_bottom_title: \"답변하기\",\n              grid_data: ProblemServer.getGrid_data(\"feedback\"),\n              input_data: ProblemServer.getInput_data(\"feedback\"),\n              output_data: ProblemServer.getOutput_data(\"feedback\"),\n              mainunit: props.unit,\n              subunit: props.quizNumber\n            }\n          });\n        },\n        children: props.score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, \"score\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FeedBackInfo, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = FeedBackInfo;\nexport default _c2 = withRouter(FeedBackInfo);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FeedBackInfo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/hongseohee/core-client-aws/CORE/core/src/teacher/components/FeedBackInfo.js"],"names":["React","useHistory","Button","ProblemServer","FeedBackInfo","match","props","history","userId","classId","title","params","height","no","id","name","unit","quizNumber","paddingLeft","paddingRight","color","set","border","borderColor","backgroundColor","borderRadius","fontFamily","fontWeight","cursor","textDecorationLine","push","pathname","state","problem_bottom_title","grid_data","getGrid_data","input_data","getInput_data","output_data","getOutput_data","mainunit","subunit","score","withRouter"],"mappings":"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","sourcesContent":["/*eslint-disable */\n\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Button from '@mui/material/Button'\nimport * as ProblemServer from '../server/ProblemServer'\n\n\nfunction FeedBackInfo({ match, props }) {\n    let history = useHistory();\n    const { userId, classId, title } = match.params;\n    return (\n        <tr align=\"center\" style={{ height: '60px' }}>\n            <td key=\"no\">{props.no}</td>\n            <td key=\"id\">{props.id}</td>\n            <td key=\"name\">{props.name}</td>\n            <td key=\"unit\">{props.unit}</td>\n            <td key=\"quizNumber\">{props.quizNumber}</td>\n            <td key=\"set\" style={{ paddingLeft: \"4%\", paddingRight: \"4%\", color: \"white\" }}>\n                {\n                    (() => {\n                        if (props.set == \"답변완료\") {\n                            return <div key=\"set\" style={{ border: \"12px solid #9A30AE\", borderColor: \"#9A30AE\", backgroundColor: \"#9A30AE\", borderRadius: \"20px\" }}>\n                                {props.set}\n                            </div>;\n                        }\n                        else {\n                            return <div key=\"set\" style={{ border: \"12px solid grey\", borderColor: \"grey\", backgroundColor: \"grey\", borderRadius: \"20px\" }}>\n                                {props.set}\n                            </div>;\n                        }\n                    }\n                    )()\n                }\n            </td>\n            <td key=\"score\">\n                <button marginleft=\"300px\" style={{ backgroundColor: \"white\", border: \"0\", fontFamily: 'esamanru', fontWeight: 'normal', height: '50px', cursor: \"pointer\", textDecorationLine: 'underline' }}\n                    onClick={() => {\n                        history.push({\n                            pathname: \"/mainpage/teacher/workbook/\"\n                                + props.userId + \"/\"\n                                + props.classId + \"/\"\n                                + props.title + \"/\"\n                                + \"quizlist/problemmain\",\n                            state: {\n                                problem_bottom_title: \"답변하기\",\n                                grid_data: ProblemServer.getGrid_data(\"feedback\"),\n                                input_data: ProblemServer.getInput_data(\"feedback\"),\n                                output_data: ProblemServer.getOutput_data(\"feedback\"),\n                                mainunit: props.unit,\n                                subunit: props.quizNumber\n                            }\n                        })\n                    }}>{props.score}</button>\n            </td>\n        </tr>\n    )\n}\nexport default withRouter(FeedBackInfo);\n\n\n"]},"metadata":{},"sourceType":"module"}