{"ast":null,"code":"import _slicedToArray from\"/Users/hongseohee/core-client-aws/CORE/core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/*eslint-disable */import React,{useState}from'react';import{Link,useHistory,useLocation}from'react-router-dom';import{Button,styled}from'@mui/material';import queryString from'query-string';import*as ProblemServer from'../server/ProblemServer';import DeleteQuiz from'./DeleteQuiz';import{makeStyles}from'@material-ui/core/styles';import{withRouter}from\"react-router\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AddQuiz=styled(Button)({marginLeft:'93.8%',marginTop:'1%',padding:'0.8%',textAlign:'center',backgroundColor:'#692498',borderRadius:'10px',color:'#fff',fontFamily:'esamanruLight',fontWeight:'normal','&:hover':{background:\"#E0BFE6\",color:\"#8154A0\"}});var EditBtn=styled(Button)({marginLeft:'0px',textAlign:'center',backgroundColor:'#E0BFE6',borderRadius:'30px',color:'#8154A0',fontWeight:'bold','&:hover':{background:\"#8154A0\",color:\"#FFF\"}});function QuizList(_ref){var match=_ref.match;var _match$params=match.params,userId=_match$params.userId,classId=_match$params.classId,title=_match$params.title;var _useState=useState([{brdno:1,brdtitle:'별탑 쌓기',brdwriter:'80'},{brdno:2,brdtitle:'1부터 100더하기',brdwriter:'30'},{brdno:3,brdtitle:'모래시계 만들기',brdwriter:'20'}]),_useState2=_slicedToArray(_useState,2),boards=_useState2[0],setBoards=_useState2[1];// handleSaveData = (data) => {\n//     let boards = this.state.boards;\n//     if (data.brdno === null || data.brdno === '' || data.brdno === undefined) {    // new : Insert\n//         this.setState({\n//             maxNo: this.state.maxNo + 1,\n//             boards: boards.concat({ brdno: this.state.maxNo, brdwriter: data.brdwriter, brdtitle: data.brdtitle })\n//         });\n//     } else {                                                        // Update\n//         this.setState({\n//             boards: boards.map(row => data.brdno === row.brdno ? { ...data } : row)\n//         })\n//     }\n// }\n// handleSelectRow = (row) => {\n//     this.child.current.handleSelectRow(row);\n// }\n// render() {\nconsole.log('퀴즈렌더링');return/*#__PURE__*/_jsxs(\"div\",{className:\"main_div\",children:[/*#__PURE__*/_jsx(\"h2\",{style:{width:'85%',margin:'20px auto',marginTop:'0px'},children:\"WorkBook - QuizList\"}),/*#__PURE__*/_jsxs(\"div\",{style:{width:'85%',margin:'20px auto'},children:[/*#__PURE__*/_jsx(\"table\",{border:\"1\",children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsxs(\"tr\",{style:{fontFamily:'esamanru',fontWeight:'bold',height:'50px'},align:\"center\",children:[/*#__PURE__*/_jsx(\"td\",{width:\"50\",children:\"No\"}),/*#__PURE__*/_jsx(\"td\",{width:\"400\",children:\"\\uBB38\\uC81C\\uBA85\"}),/*#__PURE__*/_jsx(\"td\",{width:\"60\",children:\"\\uC815\\uB2F5\\uB960\"}),/*#__PURE__*/_jsx(\"td\",{width:\"80\",children:\"\\uD3B8\\uC9D1\"})]}),boards.map(function(row){return/*#__PURE__*/_jsx(BoardItem,{row:row,userId:userId,classId:classId,title:title,mainunit:\"1\",subunit:row.brdno},row.brdno);})]})}),/*#__PURE__*/_jsx(ProblemAdd_Button,{mainunit:\"1\",subunit:boards.length+1,userId:userId,classId:classId,title:title})]})]});}export default withRouter(QuizList);function BoardItem(props){var history=useHistory();var _useLocation=useLocation(),search=_useLocation.search;var queryObj=queryString.parse(search);var mainunit=queryObj.mainunit;console.log(props.userId);return/*#__PURE__*/_jsxs(\"tr\",{align:\"center\",children:[/*#__PURE__*/_jsx(\"td\",{children:props.row.brdno}),/*#__PURE__*/_jsx(\"td\",{children:props.row.brdtitle}),/*#__PURE__*/_jsx(\"td\",{children:props.row.brdwriter}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(EditBtn,{style:{marginLeft:\"10%\",marginRight:\"0%\",float:\"left\"},onClick:function onClick(){history.push({pathname:\"/mainpage/teacher/workbook/\"+props.userId+\"/\"+props.classId+\"/\"+props.title+\"/\"+\"quizlist/problemmain\",state:{problem_bottom_title:\"수정하기\",grid_data:ProblemServer.getGrid_data(\"modify\"),input_data:ProblemServer.getInput_data(\"modify\"),output_data:ProblemServer.getOutput_data(\"modify\"),mainunit:mainunit,subunit:props.subunit}});},children:\"\\uC218\\uC815\"}),/*#__PURE__*/_jsx(DeleteQuiz,{style:{marginLeft:\"0%\",marginRight:\"10%\",float:\"right\"}})]})]});}function ProblemAdd_Button(props){var history=useHistory();return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(AddQuiz,{onClick:function onClick(){history.push({pathname:\"/mainpage/teacher/workbook/\"+props.userId+\"/\"+props.classId+\"/\"+props.title+\"/\"+\"quizlist/problemmain\",state:{problem_bottom_title:\"문제등록\",grid_data:ProblemServer.getGrid_data(\"register\"),input_data:ProblemServer.getInput_data(\"register\"),output_data:ProblemServer.getOutput_data(\"register\"),mainunit:props.mainunit,subunit:props.subunit}});},children:\"\\uBB38\\uC81C\\uB4F1\\uB85D\"})});}","map":{"version":3,"sources":["/Users/hongseohee/core-client-aws/CORE/core/src/teacher/components/QuizList.js"],"names":["React","useState","Link","useHistory","useLocation","Button","styled","queryString","ProblemServer","DeleteQuiz","makeStyles","withRouter","AddQuiz","marginLeft","marginTop","padding","textAlign","backgroundColor","borderRadius","color","fontFamily","fontWeight","background","EditBtn","QuizList","match","params","userId","classId","title","brdno","brdtitle","brdwriter","boards","setBoards","console","log","width","margin","height","map","row","length","BoardItem","props","history","search","queryObj","parse","mainunit","marginRight","float","push","pathname","state","problem_bottom_title","grid_data","getGrid_data","input_data","getInput_data","output_data","getOutput_data","subunit","ProblemAdd_Button"],"mappings":"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","sourcesContent":["/*eslint-disable */\n\nimport React, { useState } from 'react';\n\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { Button, styled } from '@mui/material';\nimport queryString from 'query-string'\nimport * as ProblemServer from '../server/ProblemServer'\nimport DeleteQuiz from './DeleteQuiz';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { withRouter } from \"react-router\";\n\n\nconst AddQuiz = styled(Button)({\n    marginLeft: '93.8%',\n    marginTop: '1%',\n    padding: '0.8%',\n    textAlign: 'center',\n    backgroundColor: '#692498',\n    borderRadius: '10px',\n    color: '#fff',\n    fontFamily: 'esamanruLight',\n    fontWeight: 'normal',\n    '&:hover': {\n        background: \"#E0BFE6\",\n        color: \"#8154A0\"\n    }\n});\n\nconst EditBtn = styled(Button)({\n    marginLeft: '0px',\n    textAlign: 'center',\n    backgroundColor: '#E0BFE6',\n    borderRadius: '30px',\n    color: '#8154A0',\n    fontWeight: 'bold',\n    '&:hover': {\n        background: \"#8154A0\",\n        color: \"#FFF\"\n    }\n});\n\nfunction QuizList({ match }) {\n\n    const { userId, classId, title } = match.params;\n\n    let [boards, setBoards] = useState([{\n        brdno: 1,\n        brdtitle: '별탑 쌓기',\n        brdwriter: '80'\n    },\n    {\n        brdno: 2,\n        brdtitle: '1부터 100더하기',\n        brdwriter: '30'\n    },\n    {\n        brdno: 3,\n        brdtitle: '모래시계 만들기',\n        brdwriter: '20'\n    }])\n\n\n    // handleSaveData = (data) => {\n    //     let boards = this.state.boards;\n    //     if (data.brdno === null || data.brdno === '' || data.brdno === undefined) {    // new : Insert\n    //         this.setState({\n    //             maxNo: this.state.maxNo + 1,\n    //             boards: boards.concat({ brdno: this.state.maxNo, brdwriter: data.brdwriter, brdtitle: data.brdtitle })\n    //         });\n    //     } else {                                                        // Update\n    //         this.setState({\n    //             boards: boards.map(row => data.brdno === row.brdno ? { ...data } : row)\n    //         })\n    //     }\n    // }\n    // handleSelectRow = (row) => {\n    //     this.child.current.handleSelectRow(row);\n    // }\n\n    // render() {\n\n    console.log('퀴즈렌더링');\n\n    return (\n        <div className=\"main_div\">\n            <h2 style={{ width: '85%', margin: '20px auto', marginTop: '0px' }}>WorkBook - QuizList</h2>\n            <div style={{ width: '85%', margin: '20px auto' }}>\n                <table border=\"1\" >\n                    <tbody>\n                        <tr style={{ fontFamily: 'esamanru', fontWeight: 'bold', height: '50px' }} align=\"center\" >\n                            <td width=\"50\">No</td>\n                            <td width=\"400\">문제명</td>\n                            <td width=\"60\">정답률</td>\n                            <td width=\"80\">편집</td>\n                        </tr>\n                        {\n                            boards.map(row =>\n                            (<BoardItem key={row.brdno} row={row} userId={userId} classId={classId} title={title}\n                                mainunit=\"1\" subunit={row.brdno} />)\n                            )\n                        }\n                    </tbody>\n                </table>\n                <ProblemAdd_Button mainunit=\"1\" subunit={boards.length + 1}\n                    userId={userId} classId={classId} title={title} />\n            </div>\n        </div>\n    );\n\n}\nexport default withRouter(QuizList);\n\nfunction BoardItem(props) {\n    let history = useHistory();\n    let { search } = useLocation();\n\n    const queryObj = queryString.parse(search);\n    const { mainunit } = queryObj;\n\n    console.log(props.userId)\n\n    return (\n        <tr align=\"center\">\n            <td>{props.row.brdno}</td>\n            <td>{props.row.brdtitle}</td>\n            <td>{props.row.brdwriter}</td>\n            <td>\n                <EditBtn style={{ marginLeft: \"10%\", marginRight: \"0%\", float: \"left\" }} onClick={\n                    () => {\n                        history.push({\n                            pathname: \"/mainpage/teacher/workbook/\"\n                                + props.userId + \"/\"\n                                + props.classId + \"/\"\n                                + props.title + \"/\"\n                                + \"quizlist/problemmain\",\n                            state: {\n                                problem_bottom_title: \"수정하기\",\n                                grid_data: ProblemServer.getGrid_data(\"modify\"),\n                                input_data: ProblemServer.getInput_data(\"modify\"),\n                                output_data: ProblemServer.getOutput_data(\"modify\"),\n                                mainunit: mainunit,\n                                subunit: props.subunit\n                            }\n                        })\n                    }}>수정</EditBtn>\n                <DeleteQuiz style={{ marginLeft: \"0%\", marginRight: \"10%\", float: \"right\" }} />\n            </td>\n        </tr>\n    );\n\n}\n\nfunction ProblemAdd_Button(props) {\n    let history = useHistory();\n\n\n\n    return (\n        <div>\n            <AddQuiz\n                onClick={() => {\n                    history.push({\n                        pathname: \"/mainpage/teacher/workbook/\"\n                            + props.userId + \"/\"\n                            + props.classId + \"/\"\n                            + props.title + \"/\"\n                            + \"quizlist/problemmain\",\n                        state: {\n                            problem_bottom_title: \"문제등록\",\n                            grid_data: ProblemServer.getGrid_data(\"register\"),\n                            input_data: ProblemServer.getInput_data(\"register\"),\n                            output_data: ProblemServer.getOutput_data(\"register\"),\n                            mainunit: props.mainunit,\n                            subunit: props.subunit\n                        }\n                    })\n                }}>문제등록</AddQuiz>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}