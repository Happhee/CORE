{"ast":null,"code":"import _slicedToArray from\"/Users/hongseohee/core-client-aws/CORE/core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/*eslint-disable */import React,{useEffect,useState}from'react';import ProblemGrid from'../../components/ProblemGrid';import{useHistory,withRouter,useParams,useLocation}from'react-router-dom';import{Button,styled}from'@mui/material';import Box from'@mui/material/Box';import*as InputValidation from'../../components/InputValidation';import AlertDialog from'../../components/AlertDialog';import queryString from'query-string';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Back=styled(Button)({marginLeft:'87%',height:'40px',paddingBottom:\"3%\",textAlign:'center',backgroundColor:'#692498',borderRadius:'10px',color:'#fff',fontFamily:'esamanruLight',fontWeight:'normal','&:hover':{background:\"#E0BFE6\",color:\"#8154A0\"}});function ProblemAdd(){var _useLocation=useLocation(),search=_useLocation.search;var location=useLocation();var queryObj=queryString.parse(search);var mainunit=queryObj.mainunit,subunit=queryObj.subunit;var history=useHistory();var problem_bottom_title=location.state.problem_bottom_title;var _useState=useState(location.state.grid_data),_useState2=_slicedToArray(_useState,2),grid_data=_useState2[0],setGrid_data=_useState2[1];var _useState3=useState(location.state.input_data),_useState4=_slicedToArray(_useState3,2),input_data=_useState4[0],setInput_data=_useState4[1];var _useState5=useState(location.state.output_data),_useState6=_slicedToArray(_useState5,2),output_data=_useState6[0],setOutput_data=_useState6[1];var _useState7=useState(location.state.question_data),_useState8=_slicedToArray(_useState7,2),question_data=_useState8[0],setQuestion_data=_useState8[1];var _useState9=useState(location.state.answer_data),_useState10=_slicedToArray(_useState9,2),answer_data=_useState10[0],setAnswer_data=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),textfield_state=_useState12[0],setTextfield_state=_useState12[1];function goList(){history.goBack();}function checkRegisterProblem(){return InputValidation.checkTextfieldValue(input_data)&&InputValidation.checkTextfieldValue(output_data)&&InputValidation.checkTextfieldValue(grid_data);}function handleRegisterClose(){console.log(\"등록해주세요\");// 서버로 값 보내줘야함!!!!!!!!!!!!!!!!!!!!!!!!!!!\ngoList();}console.log(\"문제추가렌더링\");return/*#__PURE__*/_jsx(\"div\",{className:\"main_problem_div\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"sub_div\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"problem_top_div\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"problem_top_div\",children:grid_data[0].title}),/*#__PURE__*/_jsx(Box,{sx:{'& button':{m:0.5}},children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Back,{onClick:goList,children:/*#__PURE__*/_jsx(\"h4\",{children:\"\\uBAA9\\uB85D\\uC73C\\uB85C\"})})})})]}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(ProblemGrid,{mainunit:mainunit,subunit:subunit,grid_data:grid_data,input_data:input_data,output_data:output_data,question_data:question_data,answer_data:answer_data}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"problem_bottom_div\",children:/*#__PURE__*/_jsx(Box,{sx:{'& button':{m:0.5}},children:/*#__PURE__*/_jsx(AlertDialog,{alertDialog_title:problem_bottom_title,textfield_state:textfield_state,checkRegisterProblem:checkRegisterProblem,handleRegisterClose:handleRegisterClose})})})]})});}export default withRouter(ProblemAdd);","map":{"version":3,"sources":["/Users/hongseohee/core-client-aws/CORE/core/src/student/components/SubmitMain.js"],"names":["React","useEffect","useState","ProblemGrid","useHistory","withRouter","useParams","useLocation","Button","styled","Box","InputValidation","AlertDialog","queryString","Back","marginLeft","height","paddingBottom","textAlign","backgroundColor","borderRadius","color","fontFamily","fontWeight","background","ProblemAdd","search","location","queryObj","parse","mainunit","subunit","history","problem_bottom_title","state","grid_data","setGrid_data","input_data","setInput_data","output_data","setOutput_data","question_data","setQuestion_data","answer_data","setAnswer_data","textfield_state","setTextfield_state","goList","goBack","checkRegisterProblem","checkTextfieldValue","handleRegisterClose","console","log","title","m"],"mappings":"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","sourcesContent":["/*eslint-disable */\n\nimport React, { useEffect, useState } from 'react';\nimport ProblemGrid from '../../components/ProblemGrid';\nimport { useHistory, withRouter, useParams, useLocation } from 'react-router-dom';\nimport { Button, styled } from '@mui/material';\nimport Box from '@mui/material/Box'\nimport * as InputValidation from '../../components/InputValidation';\nimport AlertDialog from '../../components/AlertDialog';\nimport queryString from 'query-string'\n\nconst Back = styled(Button)({\n    marginLeft: '87%',\n    height: '40px',\n    paddingBottom: \"3%\",\n    textAlign: 'center',\n    backgroundColor: '#692498',\n    borderRadius: '10px',\n    color: '#fff',\n    fontFamily: 'esamanruLight',\n    fontWeight: 'normal',\n    '&:hover': {\n        background: \"#E0BFE6\",\n        color: \"#8154A0\"\n    }\n});\n\nfunction ProblemAdd() {\n\n    const { search } = useLocation();\n    const location = useLocation();\n    const queryObj = queryString.parse(search);\n    const { mainunit, subunit } = queryObj;\n    let history = useHistory();\n\n    let problem_bottom_title = location.state.problem_bottom_title;\n    let [grid_data, setGrid_data] = useState(location.state.grid_data);\n    let [input_data, setInput_data] = useState(location.state.input_data);\n    let [output_data, setOutput_data] = useState(location.state.output_data);\n    let [question_data, setQuestion_data] = useState(location.state.question_data);\n    let [answer_data, setAnswer_data] = useState(location.state.answer_data);\n\n    let [textfield_state, setTextfield_state] = useState('');\n\n    function goList() {\n\n        history.goBack()\n\n    }\n\n    function checkRegisterProblem() {\n\n        return (InputValidation.checkTextfieldValue(input_data) &&\n            InputValidation.checkTextfieldValue(output_data) && InputValidation.checkTextfieldValue(grid_data))\n    }\n    function handleRegisterClose() {\n        console.log(\"등록해주세요\")\n        // 서버로 값 보내줘야함!!!!!!!!!!!!!!!!!!!!!!!!!!!\n        goList();\n    }\n    console.log(\"문제추가렌더링\")\n\n    return (\n        <div className=\"main_problem_div\">\n            <div className=\"sub_div\">\n                <div className=\"problem_top_div\">\n                    <h5 className=\"problem_top_div\">{grid_data[0].title}</h5>\n                    <Box sx={{ '& button': { m: 0.5 } }}>\n                        <div>\n                            <Back onClick={goList}><h4>목록으로</h4></Back>\n                        </div>\n                    </Box>\n\n\n                </div>\n                <hr />\n                <ProblemGrid\n                    mainunit={mainunit} subunit={subunit}\n                    grid_data={grid_data} input_data={input_data} output_data={output_data}\n                    question_data={question_data} answer_data={answer_data} />\n                <hr />\n                <div className=\"problem_bottom_div\">\n                    <Box sx={{ '& button': { m: 0.5 } }}>\n                        <AlertDialog alertDialog_title={problem_bottom_title} textfield_state={textfield_state} checkRegisterProblem={checkRegisterProblem}\n                            handleRegisterClose={handleRegisterClose} />\n                    </Box>\n\n                </div>\n\n            </div>\n\n        </div>\n    );\n\n}\n\nexport default withRouter(ProblemAdd);"]},"metadata":{},"sourceType":"module"}