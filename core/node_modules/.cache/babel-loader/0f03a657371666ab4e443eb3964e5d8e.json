{"ast":null,"code":"var _jsxFileName = \"/Users/hongseohee/core-client-aws/CORE/core/src/teacher/components/ProblemMain.js\",\n    _s = $RefreshSig$();\n\n/*eslint-disable */\nimport '../css/ProblemAdd.css';\nimport React, { useEffect, useState } from 'react';\nimport ProblemGrid from '../../components/ProblemGrid';\nimport { useHistory, withRouter, useParams, useLocation } from 'react-router-dom';\nimport { Button, styled } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport * as InputValidation from '../../components/InputValidation';\nimport AlertDialog from '../../components/AlertDialog';\nimport queryString from 'query-string';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Back = styled(Button)({\n  marginLeft: '87%',\n  height: '40px',\n  paddingBottom: \"3%\",\n  textAlign: 'center',\n  backgroundColor: '#692498',\n  borderRadius: '30px',\n  color: '#fff',\n  fontFamily: 'esamanruLight',\n  fontWeight: 'normal',\n  '&:hover': {\n    background: \"#E0BFE6\",\n    color: \"#8154A0\"\n  }\n});\n\nfunction ProblemAdd() {\n  _s();\n\n  const location = useLocation();\n  let history = useHistory();\n  let mainunit = location.state.mainunit;\n  let subunit = location.state.subunit;\n  let problem_bottom_title = location.state.problem_bottom_title;\n  let [grid_data, setGrid_data] = useState(location.state.grid_data);\n  let [input_data, setInput_data] = useState(location.state.input_data);\n  let [output_data, setOutput_data] = useState(location.state.output_data);\n  let [textfield_state, setTextfield_state] = useState('');\n\n  function goList() {\n    history.goBack();\n  }\n\n  function checkRegisterProblem() {\n    return InputValidation.checkTextfieldValue(input_data) && InputValidation.checkTextfieldValue(output_data) && InputValidation.checkTextfieldValue(grid_data);\n  }\n\n  function handleRegisterClose() {\n    console.log(\"등록해주세요\"); // 서버로 값 보내줘야함!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n    console.log(input_data);\n    goList();\n  }\n\n  console.log(\"문제추가렌더링\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main_problem_div\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sub_div\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"problem_top_div\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"problem_top_div\",\n          children: grid_data[0].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            '& button': {\n              m: 0.5\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Back, {\n              onClick: goList,\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"\\uBAA9\\uB85D\\uC73C\\uB85C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 52\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProblemGrid, {\n        mainunit: mainunit,\n        subunit: subunit,\n        grid_data: grid_data,\n        input_data: input_data,\n        output_data: output_data,\n        alertDialog_title: problem_bottom_title,\n        textfield_state: textfield_state,\n        checkRegisterProblem: checkRegisterProblem,\n        handleRegisterClose: handleRegisterClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProblemAdd, \"GsNKpXeF2EtJo/ZmsHXThcp8gjg=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = ProblemAdd;\nexport default _c2 = withRouter(ProblemAdd);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProblemAdd\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/hongseohee/core-client-aws/CORE/core/src/teacher/components/ProblemMain.js"],"names":["React","useEffect","useState","ProblemGrid","useHistory","withRouter","useParams","useLocation","Button","styled","Box","InputValidation","AlertDialog","queryString","Back","marginLeft","height","paddingBottom","textAlign","backgroundColor","borderRadius","color","fontFamily","fontWeight","background","ProblemAdd","location","history","mainunit","state","subunit","problem_bottom_title","grid_data","setGrid_data","input_data","setInput_data","output_data","setOutput_data","textfield_state","setTextfield_state","goList","goBack","checkRegisterProblem","checkTextfieldValue","handleRegisterClose","console","log","title","m"],"mappings":"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","sourcesContent":["/*eslint-disable */\n\nimport '../css/ProblemAdd.css'\nimport React, { useEffect, useState } from 'react';\nimport ProblemGrid from '../../components/ProblemGrid';\nimport { useHistory, withRouter, useParams, useLocation } from 'react-router-dom';\nimport { Button, styled } from '@mui/material';\nimport Box from '@mui/material/Box'\nimport * as InputValidation from '../../components/InputValidation';\nimport AlertDialog from '../../components/AlertDialog';\nimport queryString from 'query-string'\n\nconst Back = styled(Button)({\n    marginLeft: '87%',\n    height: '40px',\n    paddingBottom: \"3%\",\n    textAlign: 'center',\n    backgroundColor: '#692498',\n    borderRadius: '30px',\n    color: '#fff',\n    fontFamily: 'esamanruLight',\n    fontWeight: 'normal',\n    '&:hover': {\n        background: \"#E0BFE6\",\n        color: \"#8154A0\"\n    }\n});\n\nfunction ProblemAdd() {\n\n\n    const location = useLocation();\n\n    let history = useHistory();\n\n    let mainunit = location.state.mainunit;\n    let subunit = location.state.subunit;\n    let problem_bottom_title = location.state.problem_bottom_title;\n    let [grid_data, setGrid_data] = useState(location.state.grid_data);\n    let [input_data, setInput_data] = useState(location.state.input_data);\n    let [output_data, setOutput_data] = useState(location.state.output_data);\n\n\n    let [textfield_state, setTextfield_state] = useState('');\n\n    function goList() {\n        history.goBack()\n    }\n\n\n    function checkRegisterProblem() {\n        return (InputValidation.checkTextfieldValue(input_data) &&\n            InputValidation.checkTextfieldValue(output_data) && InputValidation.checkTextfieldValue(grid_data))\n    }\n\n\n    function handleRegisterClose() {\n        console.log(\"등록해주세요\")\n        // 서버로 값 보내줘야함!!!!!!!!!!!!!!!!!!!!!!!!!!!\n        console.log(input_data);\n        goList();\n    }\n\n    console.log(\"문제추가렌더링\")\n    return (\n        <div className=\"main_problem_div\">\n            <div className=\"sub_div\">\n                <div className=\"problem_top_div\">\n                    <h5 className=\"problem_top_div\">{grid_data[0].title}</h5>\n                    <Box sx={{ '& button': { m: 0.5 } }}>\n                        <div>\n                            <Back onClick={goList}><h4>목록으로</h4></Back>\n                        </div>\n                    </Box>\n\n\n                </div>\n                <hr />\n                <ProblemGrid\n                    mainunit={mainunit} subunit={subunit}\n                    grid_data={grid_data} input_data={input_data} output_data={output_data}\n                    alertDialog_title={problem_bottom_title} textfield_state={textfield_state} checkRegisterProblem={checkRegisterProblem}\n                    handleRegisterClose={handleRegisterClose} />\n\n                {/* <div className=\"problem_bottom_div\">\n                    <Box sx={{ '& button': { m: 0.5 } }}>\n                        <AlertDialog alertDialog_title={problem_bottom_title} textfield_state={textfield_state} checkRegisterProblem={checkRegisterProblem}\n                            handleRegisterClose={handleRegisterClose} />\n                    </Box>\n\n                </div> */}\n\n            </div>\n\n        </div>\n    );\n\n}\n\nexport default withRouter(ProblemAdd);"]},"metadata":{},"sourceType":"module"}